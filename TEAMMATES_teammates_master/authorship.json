[{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"import teammates.common.util.Assumption;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FeedbackTextQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    static final String TEXT_ERROR_INVALID_RECOMMENDED_LENGTH \u003d \"Recommended length must be 1 or greater\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Nullable"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Integer recommendedLength;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"    private Boolean shouldAllowRichText;"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FeedbackTextQuestionDetails() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FeedbackTextQuestionDetails(String questionText) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.TEXT, questionText);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        recommendedLength \u003d null;"},{"lineNumber":27,"author":{"gitId":"moziliar"},"content":"        shouldAllowRichText \u003d true;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {"},{"lineNumber":32,"author":{"gitId":"moziliar"},"content":"        Assumption.assertTrue(newDetails instanceof FeedbackTextQuestionDetails);"},{"lineNumber":33,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":34,"author":{"gitId":"moziliar"},"content":"        // delete the existing response upon change from rich text allowed to disallowed"},{"lineNumber":35,"author":{"gitId":"moziliar"},"content":"        // due to the effort to cleanup of HTML tags from the respondents"},{"lineNumber":36,"author":{"gitId":"moziliar"},"content":"        return !((FeedbackTextQuestionDetails) newDetails).shouldAllowRichText \u0026\u0026 shouldAllowRichText;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (recommendedLength !\u003d null \u0026\u0026 recommendedLength \u003c 1) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            errors.add(TEXT_ERROR_INVALID_RECOMMENDED_LENGTH);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Integer getRecommendedLength() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return recommendedLength;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setRecommendedLength(Integer recommendedLength) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.recommendedLength \u003d recommendedLength;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":71,"author":{"gitId":"moziliar"},"content":"    public boolean getShouldAllowRichText() {"},{"lineNumber":72,"author":{"gitId":"moziliar"},"content":"        return shouldAllowRichText;"},{"lineNumber":73,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":75,"author":{"gitId":"moziliar"},"content":"    public void setShouldAllowRichText(Boolean shouldAllowRichText) {"},{"lineNumber":76,"author":{"gitId":"moziliar"},"content":"        this.shouldAllowRichText \u003d shouldAllowRichText;"},{"lineNumber":77,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":17,"-":61}},{"path":"src/main/java/teammates/logic/api/EmailGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.appengine.api.log.AppLogLine;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates.EmailTemplates;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Handles operations related to generating emails to be sent from provided templates."},{"lineNumber":37,"author":{"gitId":"-"},"content":" *"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * @see EmailTemplates"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * @see EmailType"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * @see EmailWrapper"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EmailGenerator {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // status-related strings"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_OPEN \u003d \"is still open for submissions\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_OPENING \u003d \"is now open\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_CLOSING \u003d \"is closing soon\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_CLOSED \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \"is now closed. You can still view your submission by going to the link sent earlier, \""},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"but you will not be able to edit existing responses or submit new responses\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // feedback action strings"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW \u003d \"submit, edit or view\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_ACTION_VIEW \u003d \"view\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String HTML_NO_ACTION_REQUIRED \u003d"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"\u003cp\u003eNo action is required if you have already submitted.\u003c/p\u003e\" + System.lineSeparator();"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String DATETIME_DISPLAY_FORMAT \u003d \"EEE, dd MMM yyyy, hh:mm a z\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Generates the feedback session opening emails for the given {@code session}."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionOpeningEmails(FeedbackSessionAttributes session) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionForStudentsToAnswer(session);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d isEmailNeeded"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                                      EmailType.FEEDBACK_OPENING.getSubject());"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : emails) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            email.setContent(email.getContent().replace(\"${status}\", FEEDBACK_STATUS_SESSION_OPENING));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Generates the feedback session reminder emails for the given {@code session} for {@code students}"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * and {@code instructorsToRemind}. In addition, the emails will also be forwarded to {@code instructorsToNotify}."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionReminderEmails("},{"lineNumber":94,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes session, List\u003cStudentAttributes\u003e students,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorsToRemind, InstructorAttributes instructorToNotify) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_OPEN);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d HTML_NO_ACTION_REQUIRED + getAdditionalContactInformationFragment(course);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructorToNotifyAsList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        instructorToNotifyAsList.add(instructorToNotify);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                generateFeedbackSessionEmailBasesForInstructorReminders(course, session, instructorsToRemind, template,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                        EmailType.FEEDBACK_SESSION_REMINDER.getSubject(), additionalContactInformation);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        emails.addAll(generateFeedbackSessionEmailBases(course, session, students, instructorToNotifyAsList, template,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                        EmailType.FEEDBACK_SESSION_REMINDER.getSubject(),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                                        FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation));"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Generates the feedback session reminder emails for the given {@code student}."},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public EmailWrapper generateFeedbackSessionStudentReminderEmail("},{"lineNumber":117,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_OPEN);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d HTML_NO_ACTION_REQUIRED + getAdditionalContactInformationFragment(course);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBaseForStudents(course, session, student, template,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_SESSION_REMINDER.getSubject(),"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Generates the email containing the summary of the feedback sessions"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * email for the given {@code courseId} for {@code student}."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param courseId - ID of the course"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @param studentEmail - Email of student to send feedback session summary to"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @param resendLinksTemplate - The email template including the reason behind why the links are being resent"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public EmailWrapper generateFeedbackSessionSummaryOfCourse("},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String courseId, String studentEmail, String resendLinksTemplate) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(courseId);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, studentEmail);"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e sessions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsInCourse \u003d fsLogic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsInCourse) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            if (fsa.isSentOpenEmail() || fsa.isSentPublishedEmail()) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                sessions.add(fsa);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        StringBuffer linksFragmentValue \u003d new StringBuffer(1000);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(student.getRegistrationUrl()).toAbsoluteString();"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String joinFragmentValue \u003d isYetToJoinCourse(student)"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                                   ? Templates.populateTemplate(EmailTemplates.FRAGMENT_STUDENT_COURSE_JOIN,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                           \"${joinUrl}\", joinUrl,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                                           \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                                           \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()))"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                                   : \"\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : sessions) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String submitUrlHtml \u003d \"(Feedback session is not yet opened)\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String reportUrlHtml \u003d \"(Feedback session is not yet published)\";"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"            if (fsa.isOpened() || fsa.isClosed()) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                        .withSessionName(fsa.getFeedbackSessionName())"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                submitUrlHtml \u003d \"\u003ca href\u003d\\\"\" + submitUrl + \"\\\"\u003e\" + submitUrl + \"\u003c/a\u003e\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"            if (fsa.isPublished()) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        .withSessionName(fsa.getFeedbackSessionName())"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                reportUrlHtml \u003d \"\u003ca href\u003d\\\"\" + reportUrl + \"\\\"\u003e\" + reportUrl + \"\u003c/a\u003e\";"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"            linksFragmentValue.append(Templates.populateTemplate("},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    EmailTemplates.FRAGMENT_SINGLE_FEEDBACK_SESSION_LINKS,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    \"${feedbackSessionName}\", fsa.getFeedbackSessionName(),"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    \"${deadline}\", TimeHelper.formatInstant(fsa.getEndTime(), fsa.getTimeZone(), DATETIME_DISPLAY_FORMAT)"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                            + (fsa.isClosed() ? \" (Passed)\" : \"\"),"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    \"${submitUrl}\", submitUrlHtml,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    \"${reportUrl}\", reportUrlHtml));"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (linksFragmentValue.length() \u003d\u003d 0) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            linksFragmentValue.append(\"No links found.\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(resendLinksTemplate,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                \"${userEmail}\", student.email,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \"${courseId}\", course.getId(),"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", joinFragmentValue,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \"${linksFragment}\", linksFragmentValue.toString(),"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // Set appropriate email subject, depending on the email template"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (resendLinksTemplate.equals(Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS)) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            email.setSubject(String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId()));"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } else if (resendLinksTemplate.equals(Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS)) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            email.setSubject(String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(),"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                                                                                    course.getName(), course.getId()));"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Generates for the student an recovery email listing the links to submit/view responses for all feedback sessions"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * under {@code recoveryEmailAddress} in the past 180 days. If no student with {@code recoveryEmailAddress} is"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * found, generate an email stating that there is no such student in the system. If no feedback sessions are found,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * generate an email stating no feedback sessions found."},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public EmailWrapper generateSessionLinksRecoveryEmailForStudent(String recoveryEmailAddress) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentsForEmail \u003d studentsLogic.getAllStudentsForEmail(recoveryEmailAddress);"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (studentsForEmail.isEmpty()) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return generateSessionLinksRecoveryEmailForNonExistentStudent(recoveryEmailAddress);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return generateSessionLinksRecoveryEmailForExistingStudent(recoveryEmailAddress, studentsForEmail);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private List\u003cEmailWrapper\u003e generateFeedbackSessionEmailBasesForInstructorReminders("},{"lineNumber":240,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, List\u003cInstructorAttributes\u003e instructors,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            String template, String subject, String additionalContactInformation) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new ArrayList\u003c\u003e();"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            emails.add(generateFeedbackSessionEmailBaseForInstructorReminders(course, session, instructor,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    template, subject, additionalContactInformation));"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private EmailWrapper generateSessionLinksRecoveryEmailForNonExistentStudent(String recoveryEmailAddress) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String emailBody;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        String subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        String recoveryUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSIONS_LINK_RECOVERY_PAGE).toAbsoluteString();"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        emailBody \u003d Templates.populateTemplate("},{"lineNumber":256,"author":{"gitId":"-"},"content":"                EmailTemplates.SESSION_LINKS_RECOVERY_EMAIL_NOT_FOUND,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                \"${userEmail}\", SanitizationHelper.sanitizeForHtml(recoveryEmailAddress),"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \"${teammateHomePageLink}\", Config.getFrontEndAppUrl(\"/\").toAbsoluteString(),"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                \"${sessionsRecoveryLink}\", recoveryUrl);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(recoveryEmailAddress);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        email.setSubject(subject);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private EmailWrapper generateSessionLinksRecoveryEmailForExistingStudent(String recoveryEmailAddress,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                                                                             List\u003cStudentAttributes\u003e studentsForEmail) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        String emailBody;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        String subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Instant endTime \u003d Instant.now();"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Instant startTime \u003d endTime.minus(Duration.ofDays(180));"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Map\u003cString, StringBuilder\u003e linkFragmentsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        String studentName \u003d null;"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsLogic.getAllFeedbackSessionsWithinTimeRange(startTime, endTime);"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes session : sessions) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            String courseId \u003d session.getCourseId();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            CourseAttributes course \u003d coursesLogic.getCourse(courseId);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e students \u003d studentsForEmail.stream().filter("},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    each -\u003e each.course.equals(courseId)).collect(Collectors.toList());"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            StringBuilder linksFragmentValue;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            if (linkFragmentsMap.containsKey(courseId)) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                linksFragmentValue \u003d linkFragmentsMap.get(courseId);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                linksFragmentValue \u003d new StringBuilder(5000);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"            if (students.size() !\u003d 1) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"            StudentAttributes student \u003d students.get(0);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            studentName \u003d student.getName();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            String submitUrlHtml \u003d \"\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            String reportUrlHtml \u003d \"\";"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"            if (session.isOpened() || session.isClosed()) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                        .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                submitUrlHtml \u003d \"[\u003ca href\u003d\\\"\" + submitUrl + \"\\\"\u003esubmission link\u003c/a\u003e]\";"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"            if (session.isPublished()) {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                        .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                reportUrlHtml \u003d \"[\u003ca href\u003d\\\"\" + reportUrl + \"\\\"\u003eresult link\u003c/a\u003e]\";"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"            linksFragmentValue.append(Templates.populateTemplate("},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    EmailTemplates.FRAGMENT_SESSION_LINKS_RECOVERY_ACCESS_LINKS_BY_SESSION,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    \"${sessionName}\", session.getFeedbackSessionName(),"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    \"${submitUrl}\", submitUrlHtml,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    \"${reportUrl}\", reportUrlHtml));"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"            linkFragmentsMap.putIfAbsent(courseId, linksFragmentValue);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"        String recoveryUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSIONS_LINK_RECOVERY_PAGE).toAbsoluteString();"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        if (linkFragmentsMap.isEmpty()) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            emailBody \u003d Templates.populateTemplate("},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    EmailTemplates.SESSION_LINKS_RECOVERY_ACCESS_LINKS_NONE,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    \"${teammateHomePageLink}\", Config.getFrontEndAppUrl(\"/\").toAbsoluteString(),"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    \"${userEmail}\", SanitizationHelper.sanitizeForHtml(recoveryEmailAddress),"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                    \"${supportEmail}\", Config.SUPPORT_EMAIL,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                    \"${sessionsRecoveryLink}\", recoveryUrl);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            StringBuilder courseFragments \u003d new StringBuilder(10000);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            linkFragmentsMap.forEach((courseId, linksFragments) -\u003e {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                String courseBody \u003d Templates.populateTemplate("},{"lineNumber":341,"author":{"gitId":"-"},"content":"                        EmailTemplates.FRAGMENT_SESSION_LINKS_RECOVERY_ACCESS_LINKS_BY_COURSE,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                        \"${sessionFragment}\", linksFragments.toString(),"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                        \"${courseName}\", coursesLogic.getCourse(courseId).getName());"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                courseFragments.append(courseBody);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            emailBody \u003d Templates.populateTemplate("},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    EmailTemplates.SESSION_LINKS_RECOVERY_ACCESS_LINKS,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                    \"${userName}\", SanitizationHelper.sanitizeForHtml(studentName),"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                    \"${linksFragment}\", courseFragments.toString(),"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                    \"${userEmail}\", SanitizationHelper.sanitizeForHtml(recoveryEmailAddress),"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                    \"${teammateHomePageLink}\", Config.getFrontEndAppUrl(\"/\").toAbsoluteString(),"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                    \"${supportEmail}\", Config.SUPPORT_EMAIL,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                    \"${sessionsRecoveryLink}\", recoveryUrl);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(recoveryEmailAddress);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        email.setSubject(subject);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private EmailWrapper generateFeedbackSessionEmailBaseForInstructorReminders("},{"lineNumber":363,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, InstructorAttributes instructor,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            String template, String subject, String additionalContactInformation) {"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"        String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_SUBMISSION_PAGE)"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"        String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_RESULTS_PAGE)"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(template,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.name),"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":380,"author":{"gitId":"-"},"content":"                \"${feedbackSessionName}\", SanitizationHelper.sanitizeForHtml(session.getFeedbackSessionName()),"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                \"${deadline}\", SanitizationHelper.sanitizeForHtml("},{"lineNumber":382,"author":{"gitId":"-"},"content":"                        TimeHelper.formatInstant(session.getEndTime(), session.getTimeZone(), DATETIME_DISPLAY_FORMAT)),"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                \"${instructorFragment}\", \"\","},{"lineNumber":384,"author":{"gitId":"-"},"content":"                \"${sessionInstructions}\", session.getInstructionsString(),"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                \"${submitUrl}\", submitUrl,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                \"${reportUrl}\", reportUrl,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                \"${feedbackAction}\", FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.email);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(subject, course.getName(), session.getFeedbackSessionName()));"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":397,"author":{"gitId":"-"},"content":"     * Generates the feedback session closing emails for the given {@code session}."},{"lineNumber":398,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionClosingEmails(FeedbackSessionAttributes session) {"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d new ArrayList\u003c\u003e();"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionForStudentsToAnswer(session);"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        if (isEmailNeeded) {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e studentsForCourse \u003d studentsLogic.getStudentsForCourse(session.getCourseId());"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentsForCourse) {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                    if (!fsLogic.isFeedbackSessionAttemptedByStudent(session.getFeedbackSessionName(),"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                            session.getCourseId(), student.email)) {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                        students.add(student);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                } catch (EntityDoesNotExistException e) {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                    log.severe(\"Course \" + session.getCourseId() + \" does not exist or \""},{"lineNumber":415,"author":{"gitId":"-"},"content":"                               + \"session \" + session.getFeedbackSessionName() + \" does not exist\");"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                    // Course or session cannot be found for one student \u003d\u003e it will be the case for all students"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    // Do not waste time looping through all students"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_CLOSING);"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d HTML_NO_ACTION_REQUIRED + getAdditionalContactInformationFragment(course);"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_CLOSING.getSubject(), FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":434,"author":{"gitId":"-"},"content":"     * Generates the feedback session closed emails for the given {@code session}."},{"lineNumber":435,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionClosedEmails(FeedbackSessionAttributes session) {"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        boolean isEmailNeededForStudents \u003d false;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            isEmailNeededForStudents \u003d fsLogic.isFeedbackSessionHasQuestionForStudents("},{"lineNumber":442,"author":{"gitId":"-"},"content":"                    session.getFeedbackSessionName(), session.getCourseId());"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        } catch (EntityDoesNotExistException e) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"            log.severe(\"Course \" + session.getCourseId() + \" does not exist or \""},{"lineNumber":445,"author":{"gitId":"-"},"content":"                    + \"session \" + session.getFeedbackSessionName() + \" does not exist\");"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeededForStudents"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":450,"author":{"gitId":"daongochieu2810"},"content":"        List\u003cStudentAttributes\u003e studentsForCourse \u003d isEmailNeededForStudents"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":453,"author":{"gitId":"daongochieu2810"},"content":"        ArrayList\u003cStudentAttributes\u003e studentsToEmail \u003d new ArrayList\u003c\u003e();"},{"lineNumber":454,"author":{"gitId":"daongochieu2810"},"content":"        for (StudentAttributes student : studentsForCourse) {"},{"lineNumber":455,"author":{"gitId":"daongochieu2810"},"content":"            try {"},{"lineNumber":456,"author":{"gitId":"daongochieu2810"},"content":"                if (!fsLogic.isFeedbackSessionAttemptedByStudent(session.getFeedbackSessionName(),"},{"lineNumber":457,"author":{"gitId":"daongochieu2810"},"content":"                        session.getCourseId(), student.email)) {"},{"lineNumber":458,"author":{"gitId":"daongochieu2810"},"content":"                    studentsToEmail.add(student);"},{"lineNumber":459,"author":{"gitId":"daongochieu2810"},"content":"                }"},{"lineNumber":460,"author":{"gitId":"daongochieu2810"},"content":"            } catch (EntityDoesNotExistException e) {"},{"lineNumber":461,"author":{"gitId":"daongochieu2810"},"content":"                log.severe(\"Course \" + session.getCourseId() + \" does not exist or \""},{"lineNumber":462,"author":{"gitId":"daongochieu2810"},"content":"                        + \"session \" + session.getFeedbackSessionName() + \" does not exist\");"},{"lineNumber":463,"author":{"gitId":"daongochieu2810"},"content":"                // Course or session cannot be found for one student \u003d\u003e it will be the case for all students"},{"lineNumber":464,"author":{"gitId":"daongochieu2810"},"content":"                // Do not waste time looping through all students"},{"lineNumber":465,"author":{"gitId":"daongochieu2810"},"content":"                break;"},{"lineNumber":466,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":467,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_CLOSED);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":471,"author":{"gitId":"daongochieu2810"},"content":"        return generateFeedbackSessionEmailBases(course, session, studentsToEmail, instructors, template,"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_CLOSED.getSubject(), FEEDBACK_ACTION_VIEW, additionalContactInformation);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * Generates the feedback session published emails for the given {@code session}."},{"lineNumber":477,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionPublishedEmails(FeedbackSessionAttributes session) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionViewableToStudents(session);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d isEmailNeeded"},{"lineNumber":485,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":486,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionPublishedEmails(session, students, instructors);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * Generates the feedback session published emails for the given {@code students} and"},{"lineNumber":492,"author":{"gitId":"-"},"content":"     * {@code instructors} in {@code session}."},{"lineNumber":493,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionPublishedEmails(FeedbackSessionAttributes session,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e students, List\u003cInstructorAttributes\u003e instructors) {"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION_PUBLISHED;"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_PUBLISHED.getSubject(), FEEDBACK_ACTION_VIEW, additionalContactInformation);"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":507,"author":{"gitId":"-"},"content":"     * Generates the feedback session published emails for the given {@code session}."},{"lineNumber":508,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionUnpublishedEmails(FeedbackSessionAttributes session) {"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION_UNPUBLISHED;"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionViewableToStudents(session);"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":517,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d isEmailNeeded"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":520,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_UNPUBLISHED.getSubject());"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    private List\u003cEmailWrapper\u003e generateFeedbackSessionEmailBases("},{"lineNumber":527,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, List\u003cStudentAttributes\u003e students,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructors, String template, String subject) {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template, subject,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation);"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"    private List\u003cEmailWrapper\u003e generateFeedbackSessionEmailBases("},{"lineNumber":535,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, List\u003cStudentAttributes\u003e students,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructors, String template, String subject, String feedbackAction,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            String additionalContactInformation) {"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new ArrayList\u003c\u003e();"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"            emails.add(generateFeedbackSessionEmailBaseForStudents(course, session, student,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                    template, subject, feedbackAction, additionalContactInformation));"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            emails.add(generateFeedbackSessionEmailBaseForInstructors(course, session, instructor,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"                    template, subject, feedbackAction, additionalContactInformation));"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    private EmailWrapper generateFeedbackSessionEmailBaseForStudents("},{"lineNumber":552,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, StudentAttributes student, String template,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"            String subject, String feedbackAction, String additionalContactInformation) {"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":557,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":558,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":559,"author":{"gitId":"-"},"content":"                .withStudentEmail(student.email)"},{"lineNumber":560,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"        String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":563,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":564,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":565,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":566,"author":{"gitId":"-"},"content":"                .withStudentEmail(student.email)"},{"lineNumber":567,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(template,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":571,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":572,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":573,"author":{"gitId":"-"},"content":"                \"${feedbackSessionName}\", SanitizationHelper.sanitizeForHtml(session.getFeedbackSessionName()),"},{"lineNumber":574,"author":{"gitId":"-"},"content":"                \"${deadline}\", SanitizationHelper.sanitizeForHtml("},{"lineNumber":575,"author":{"gitId":"-"},"content":"                        TimeHelper.formatInstant(session.getEndTime(), session.getTimeZone(), DATETIME_DISPLAY_FORMAT)),"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                \"${instructorFragment}\", \"\","},{"lineNumber":577,"author":{"gitId":"-"},"content":"                \"${sessionInstructions}\", session.getInstructionsString(),"},{"lineNumber":578,"author":{"gitId":"-"},"content":"                \"${submitUrl}\", submitUrl,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                \"${reportUrl}\", reportUrl,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                \"${feedbackAction}\", feedbackAction,"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(subject, course.getName(), session.getFeedbackSessionName()));"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":590,"author":{"gitId":"-"},"content":"     * Generates the preamble for emails that are sent to students of course {@code courseId}"},{"lineNumber":591,"author":{"gitId":"-"},"content":"     * to be shown in the email copies that are sent to the instructors of the same course."},{"lineNumber":592,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    private String generateInstructorPreamble(String courseId, String courseName) {"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"        String courseIdentifier \u003d \"[\" + SanitizationHelper.sanitizeForHtml(courseId) + \"] \""},{"lineNumber":596,"author":{"gitId":"-"},"content":"                + SanitizationHelper.sanitizeForHtml(courseName);"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"        return \"\u003cp\u003eThe email below has been sent to students of course: \""},{"lineNumber":599,"author":{"gitId":"-"},"content":"            + courseIdentifier + \".\u003cbr\u003e\" + System.lineSeparator()"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            + \"\u003cbr\u003e\" + System.lineSeparator()"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            + \"\u003d\u003d\u003d Email message as seen by the students \u003d\u003d\u003d\u003c/p\u003e\" + System.lineSeparator();"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    private EmailWrapper generateFeedbackSessionEmailBaseForInstructors("},{"lineNumber":605,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, InstructorAttributes instructor,"},{"lineNumber":606,"author":{"gitId":"-"},"content":"            String template, String subject, String feedbackAction, String additionalContactInformation) {"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"        String instructorFragment \u003d generateInstructorPreamble(course.getId(), course.getName());"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(template,"},{"lineNumber":611,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.name),"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                \"${feedbackSessionName}\", SanitizationHelper.sanitizeForHtml(session.getFeedbackSessionName()),"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                \"${deadline}\", SanitizationHelper.sanitizeForHtml("},{"lineNumber":616,"author":{"gitId":"-"},"content":"                        TimeHelper.formatInstant(session.getEndTime(), session.getTimeZone(), DATETIME_DISPLAY_FORMAT)),"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                \"${instructorFragment}\", instructorFragment,"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                \"${sessionInstructions}\", session.getInstructionsString(),"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                \"${submitUrl}\", \"{in the actual email sent to the students, this will be the unique link}\","},{"lineNumber":620,"author":{"gitId":"-"},"content":"                \"${reportUrl}\", \"{in the actual email sent to the students, this will be the unique link}\","},{"lineNumber":621,"author":{"gitId":"-"},"content":"                \"${feedbackAction}\", feedbackAction,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.email);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(subject, course.getName(), session.getFeedbackSessionName()));"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":629,"author":{"gitId":"-"},"content":""},{"lineNumber":630,"author":{"gitId":"-"},"content":"    private boolean isYetToJoinCourse(StudentAttributes student) {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        return student.googleId \u003d\u003d null || student.googleId.isEmpty();"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":635,"author":{"gitId":"-"},"content":"     * Generates the new instructor account join email for the given {@code instructor}."},{"lineNumber":636,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    public EmailWrapper generateNewInstructorAccountJoinEmail("},{"lineNumber":638,"author":{"gitId":"-"},"content":"            String instructorEmail, String instructorName, String joinUrl) {"},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(EmailTemplates.NEW_INSTRUCTOR_ACCOUNT_WELCOME,"},{"lineNumber":641,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructorName),"},{"lineNumber":642,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl);"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructorEmail);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        email.setBcc(Config.SUPPORT_EMAIL);"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(),"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                SanitizationHelper.sanitizeForHtml(instructorName)));"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":653,"author":{"gitId":"-"},"content":"     * Generates the course join email for the given {@code student} in {@code course}."},{"lineNumber":654,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    public EmailWrapper generateStudentCourseJoinEmail(CourseAttributes course, StudentAttributes student) {"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":658,"author":{"gitId":"-"},"content":"                fillUpStudentJoinFragment(student, EmailTemplates.USER_COURSE_JOIN),"},{"lineNumber":659,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()),"},{"lineNumber":662,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":663,"author":{"gitId":"-"},"content":""},{"lineNumber":664,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(),"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                                       course.getName(), course.getId()));"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":672,"author":{"gitId":"-"},"content":"     * Generates the course re-join email for the given {@code student} in {@code course}."},{"lineNumber":673,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    public EmailWrapper generateStudentCourseRejoinEmailAfterGoogleIdReset("},{"lineNumber":675,"author":{"gitId":"-"},"content":"            CourseAttributes course, StudentAttributes student) {"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":678,"author":{"gitId":"-"},"content":"                fillUpStudentRejoinAfterGoogleIdResetFragment(student, EmailTemplates.USER_COURSE_JOIN),"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()),"},{"lineNumber":682,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":686,"author":{"gitId":"-"},"content":"                                       course.getName(), course.getId()));"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":692,"author":{"gitId":"-"},"content":"     * Generates the course join email for the given {@code instructor} in {@code course}."},{"lineNumber":693,"author":{"gitId":"-"},"content":"     * Also specifies contact information of {@code inviter}."},{"lineNumber":694,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    public EmailWrapper generateInstructorCourseJoinEmail(AccountAttributes inviter,"},{"lineNumber":696,"author":{"gitId":"-"},"content":"            InstructorAttributes instructor, CourseAttributes course) {"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":699,"author":{"gitId":"-"},"content":"                fillUpInstructorJoinFragment(instructor, EmailTemplates.USER_COURSE_JOIN),"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.getName()),"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                \"${inviterName}\", SanitizationHelper.sanitizeForHtml(inviter.getName()),"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                \"${inviterEmail}\", SanitizationHelper.sanitizeForHtml(inviter.getEmail()),"},{"lineNumber":704,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.getEmail());"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.INSTRUCTOR_COURSE_JOIN.getSubject(),"},{"lineNumber":708,"author":{"gitId":"-"},"content":"                                       course.getName(), course.getId()));"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":714,"author":{"gitId":"-"},"content":"     * Generates the course re-join email for the given {@code instructor} in {@code course}."},{"lineNumber":715,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    public EmailWrapper generateInstructorCourseRejoinEmailAfterGoogleIdReset("},{"lineNumber":717,"author":{"gitId":"-"},"content":"            InstructorAttributes instructor, CourseAttributes course, String institute) {"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":720,"author":{"gitId":"-"},"content":"                fillUpInstructorRejoinAfterGoogleIdResetFragment(instructor, EmailTemplates.USER_COURSE_JOIN, institute),"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.getName()),"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.getEmail());"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                course.getName(), course.getId()));"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":733,"author":{"gitId":"-"},"content":"     * Generates the course registered email for the user with the given details in {@code course}."},{"lineNumber":734,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    public EmailWrapper generateUserCourseRegisteredEmail("},{"lineNumber":736,"author":{"gitId":"-"},"content":"            String name, String emailAddress, String googleId, boolean isInstructor, CourseAttributes course) {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(EmailTemplates.USER_COURSE_REGISTER,"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(name),"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                \"${userType}\", isInstructor ? \"an instructor\" : \"a student\","},{"lineNumber":740,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":742,"author":{"gitId":"-"},"content":"                \"${googleId}\", SanitizationHelper.sanitizeForHtml(googleId),"},{"lineNumber":743,"author":{"gitId":"-"},"content":"                \"${appUrl}\", isInstructor"},{"lineNumber":744,"author":{"gitId":"-"},"content":"                        ? Config.getFrontEndAppUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE).toAbsoluteString()"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                        : Config.getFrontEndAppUrl(Const.WebPageURIs.STUDENT_HOME_PAGE).toAbsoluteString(),"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":747,"author":{"gitId":"-"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(emailAddress);"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.USER_COURSE_REGISTER.getSubject(),"},{"lineNumber":750,"author":{"gitId":"-"},"content":"                course.getName(), course.getId()));"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"-"},"content":"    private String fillUpStudentJoinFragment(StudentAttributes student, String emailBody) {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(student.getRegistrationUrl()).toAbsoluteString();"},{"lineNumber":757,"author":{"gitId":"-"},"content":""},{"lineNumber":758,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_STUDENT_COURSE_JOIN,"},{"lineNumber":760,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl);"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"    private String fillUpStudentRejoinAfterGoogleIdResetFragment(StudentAttributes student, String emailBody) {"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(student.getRegistrationUrl()).toAbsoluteString();"},{"lineNumber":765,"author":{"gitId":"-"},"content":""},{"lineNumber":766,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET,"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl,"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":770,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"    private String fillUpInstructorJoinFragment(InstructorAttributes instructor, String emailBody) {"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":774,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(instructor.key))"},{"lineNumber":775,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR)"},{"lineNumber":776,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":777,"author":{"gitId":"-"},"content":""},{"lineNumber":778,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":779,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_INSTRUCTOR_COURSE_JOIN,"},{"lineNumber":780,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl);"},{"lineNumber":781,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":782,"author":{"gitId":"-"},"content":""},{"lineNumber":783,"author":{"gitId":"-"},"content":"    private String fillUpInstructorRejoinAfterGoogleIdResetFragment("},{"lineNumber":784,"author":{"gitId":"-"},"content":"            InstructorAttributes instructor, String emailBody, String institute) {"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        AppUrl url \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":786,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(instructor.key))"},{"lineNumber":787,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR);"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        if (institute !\u003d null) {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"            url \u003d url.withInstructorInstitution(institute);"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        String joinUrl \u003d url.toAbsoluteString();"},{"lineNumber":792,"author":{"gitId":"-"},"content":""},{"lineNumber":793,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":794,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET,"},{"lineNumber":795,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl,"},{"lineNumber":796,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":798,"author":{"gitId":"-"},"content":""},{"lineNumber":799,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":800,"author":{"gitId":"-"},"content":"     * Generates the logs compilation email for the given {@code logs}."},{"lineNumber":801,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    public EmailWrapper generateCompiledLogsEmail(List\u003cAppLogLine\u003e logs) {"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        StringBuilder emailBody \u003d new StringBuilder();"},{"lineNumber":804,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {"},{"lineNumber":805,"author":{"gitId":"-"},"content":"            emailBody.append(generateSevereErrorLogLine(i, logs.get(i)));"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":807,"author":{"gitId":"-"},"content":""},{"lineNumber":808,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(Config.SUPPORT_EMAIL);"},{"lineNumber":809,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.SEVERE_LOGS_COMPILATION.getSubject(), Config.APP_VERSION));"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        email.setContent(emailBody.toString());"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":812,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"    private String generateSevereErrorLogLine(int index, AppLogLine logLine) {"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate("},{"lineNumber":816,"author":{"gitId":"-"},"content":"                EmailTemplates.SEVERE_ERROR_LOG_LINE,"},{"lineNumber":817,"author":{"gitId":"-"},"content":"                \"${index}\", String.valueOf(index),"},{"lineNumber":818,"author":{"gitId":"-"},"content":"                \"${errorType}\", logLine.getLogLevel().toString(),"},{"lineNumber":819,"author":{"gitId":"-"},"content":"                \"${errorMessage}\", logLine.getLogMessage().replace(\"\\n\", \"\u003cbr\u003e\"));"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":821,"author":{"gitId":"-"},"content":""},{"lineNumber":822,"author":{"gitId":"-"},"content":"    private EmailWrapper getEmptyEmailAddressedToEmail(String recipient) {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailWrapper();"},{"lineNumber":824,"author":{"gitId":"-"},"content":"        email.setRecipient(recipient);"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        email.setSenderEmail(Config.EMAIL_SENDEREMAIL);"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        email.setSenderName(Config.EMAIL_SENDERNAME);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        email.setReplyTo(Config.EMAIL_REPLYTO);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":829,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":830,"author":{"gitId":"-"},"content":""},{"lineNumber":831,"author":{"gitId":"-"},"content":"    private String generateCoOwnersEmailsLine(String courseId) {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e coOwners \u003d instructorsLogic.getCoOwnersForCourse(courseId);"},{"lineNumber":833,"author":{"gitId":"-"},"content":"        if (coOwners.isEmpty()) {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            return \"(No contactable instructors found)\";"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        StringBuilder coOwnersEmailsLine \u003d new StringBuilder();"},{"lineNumber":837,"author":{"gitId":"-"},"content":"        for (InstructorAttributes coOwner : coOwners) {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"            coOwnersEmailsLine"},{"lineNumber":839,"author":{"gitId":"-"},"content":"                    .append(SanitizationHelper.sanitizeForHtml(coOwner.getName()))"},{"lineNumber":840,"author":{"gitId":"-"},"content":"                    .append(\" (\")"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                    .append(coOwner.getEmail())"},{"lineNumber":842,"author":{"gitId":"-"},"content":"                    .append(\"), \");"},{"lineNumber":843,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        return coOwnersEmailsLine.substring(0, coOwnersEmailsLine.length() - 2);"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":846,"author":{"gitId":"-"},"content":""},{"lineNumber":847,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":848,"author":{"gitId":"-"},"content":"     * Generates additional contact information for User Email Templates."},{"lineNumber":849,"author":{"gitId":"-"},"content":"     * @return The contact information after replacing the placeholders."},{"lineNumber":850,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    private String getAdditionalContactInformationFragment(CourseAttributes course) {"},{"lineNumber":852,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(EmailTemplates.FRAGMENT_SESSION_ADDITIONAL_CONTACT_INFORMATION,"},{"lineNumber":853,"author":{"gitId":"-"},"content":"                \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()),"},{"lineNumber":854,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":856,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":17,"-":839}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":" * SUT: {@link FeedbackRankQuestionDetails}."},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"public class FeedbackRankQuestionDetailsTest extends BaseTestCase {"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetMinOptionsToBeRanked_sameValidValues_shouldReturnTrue() {"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"        int testValue \u003d 100;"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, Const.POINTS_NO_VALUE);"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"        feedbackRankQuestionDetails.setMinOptionsToBeRanked(testValue);"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, testValue);"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetMaxOptionsToBeRanked_sameValidValues_shouldReturnTrue() {"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"        int testValue \u003d 100;"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, Const.POINTS_NO_VALUE);"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testValue);"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetDuplicatesAllowed_validValues_shouldReturnTrue() {"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"        assertFalse(feedbackRankQuestionDetails.areDuplicatesAllowed);"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"        feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"        assertTrue(feedbackRankQuestionDetails.areDuplicatesAllowed);"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateDefaultValue_sameValues_shouldReturnTrue() {"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.getMaxOptionsToBeRanked(), Const.POINTS_NO_VALUE);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.getMinOptionsToBeRanked(), Const.POINTS_NO_VALUE);"},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":42,"-":5}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackTextQuestionDetails}."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FeedbackTextQuestionDetailsTest extends BaseTestCase {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void testIsInstructorCommentsOnResponsesAllowed_shouldReturnTrue() {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails feedbackQuestionDetails \u003d new FeedbackTextQuestionDetails();"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(feedbackQuestionDetails.isInstructorCommentsOnResponsesAllowed());"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void testIsFeedbackParticipantCommentsOnResponsesAllowed_shouldReturnFalse() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails feedbackQuestionDetails \u003d new FeedbackTextQuestionDetails();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(feedbackQuestionDetails.isFeedbackParticipantCommentsOnResponsesAllowed());"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":"    public void testIsRichTextOptionTrueByDefault_shouldReturnTrue() {"},{"lineNumber":26,"author":{"gitId":"moziliar"},"content":"        FeedbackTextQuestionDetails feedbackQuestionDetails \u003d new FeedbackTextQuestionDetails();"},{"lineNumber":27,"author":{"gitId":"moziliar"},"content":"        assertTrue(feedbackQuestionDetails.getShouldAllowRichText());"},{"lineNumber":28,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":6,"-":23}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":" * SUT: {@link FeedbackTextResponseDetails}."},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"public class FeedbackTextResponseDetailsTest extends BaseTestCase {"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateArgumentConstructor_sameValues_shouldReturnTrue() {"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"        String testAnswer \u003d \"Hello World\";"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(testAnswer);"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateAttributesOfAnswer_nullValue_shouldReturnNull() {"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(null);"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"        assertNull(feedbackTextResponseDetails.getAnswer());"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSanitizedAnswerString_nullValues_shouldReturnTrue() {"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(null);"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSanitizedAnswerString_validValues_shouldReturnTrue() {"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"        String testValue \u003d \"Hello World\";"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(testValue);"},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetAnswer_sameValues_shouldReturnTrue() {"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"        String testValue \u003d \"Hello World\";"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails();"},{"lineNumber":44,"author":{"gitId":"daongochieu2810"},"content":"        assertNotEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(testValue));"},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"        feedbackTextResponseDetails.setAnswer(testValue);"},{"lineNumber":48,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(testValue));"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":52}},{"path":"src/test/java/teammates/common/util/JsonUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * SUT: {@link JsonUtils}."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonUtilsTest extends BaseTestCase {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shouldSerializeToConcreteClass() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        FeedbackTextQuestionDetails questionDetails \u003d new FeedbackTextQuestionDetails(\"Question text.\");"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArrayList\u003cFeedbackParticipantType\u003e participants \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        participants.add(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        participants.add(FeedbackParticipantType.RECEIVER);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fqa \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                .withCourseId(\"testingCourse\")"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(\"testFeedbackSession\")"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                .withGiverType(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                .withRecipientType(FeedbackParticipantType.SELF)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(Const.MAX_POSSIBLE_RECIPIENTS)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .withQuestionNumber(1)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .withQuestionDetails(questionDetails)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(participants)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(participants)"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(participants)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"  \\\"questionDetails\\\": {\\n\""},{"lineNumber":44,"author":{"gitId":"moziliar"},"content":"                + \"    \\\"shouldAllowRichText\\\": true,\\n\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \"    \\\"questionType\\\": \\\"TEXT\\\",\\n\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                + \"    \\\"questionText\\\": \\\"Question text.\\\"\\n\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + \"  },\\n\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"  \\\"questionNumber\\\": 1,\\n\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"  \\\"giverType\\\": \\\"INSTRUCTORS\\\",\\n\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"  \\\"recipientType\\\": \\\"SELF\\\",\\n\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"  \\\"numberOfEntitiesToGiveFeedbackTo\\\": -100,\\n\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + \"  \\\"showResponsesTo\\\": [\\n\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + \"    \\\"RECEIVER\\\"\\n\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"  ],\\n\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"  \\\"showGiverNameTo\\\": [\\n\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"    \\\"RECEIVER\\\"\\n\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \"  ],\\n\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"  \\\"showRecipientNameTo\\\": [\\n\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + \"    \\\"RECEIVER\\\"\\n\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \"  ]\\n\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + \"}\", JsonUtils.toJson(fqa));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\\"feedbackSessionName\\\":\\\"testFeedbackSession\\\",\""},{"lineNumber":64,"author":{"gitId":"moziliar"},"content":"                + \"\\\"courseId\\\":\\\"testingCourse\\\",\\\"questionDetails\\\":{\\\"shouldAllowRichText\\\":true,\\\"questionType\\\":\""},{"lineNumber":65,"author":{"gitId":"moziliar"},"content":"                + \"\\\"TEXT\\\",\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + \"\\\"questionText\\\":\\\"Question text.\\\"},\\\"questionNumber\\\":1,\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"\\\"giverType\\\":\\\"INSTRUCTORS\\\",\\\"recipientType\\\":\\\"SELF\\\",\\\"numberOfEntitiesToGiveFeedbackTo\\\":-100,\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + \"\\\"showResponsesTo\\\":[\\\"RECEIVER\\\"],\\\"showGiverNameTo\\\":[\\\"RECEIVER\\\"],\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + \"\\\"showRecipientNameTo\\\":[\\\"RECEIVER\\\"]}\","},{"lineNumber":70,"author":{"gitId":"-"},"content":"                JsonUtils.toCompactJson(fqa));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void testFeedbackResponseDetailsAdaptor_withComposedResponseDetails_shouldSerializeToConcreteClass() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.builder("},{"lineNumber":77,"author":{"gitId":"-"},"content":"                        \"questionId\", \"giver@email.com\", \"recipient@email.com\")"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(\"Session1\")"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withCourseId(\"CS3281\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withGiverSection(\"giverSection\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withRecipientSection(\"recipientSection\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withResponseDetails(new FeedbackTextResponseDetails(\"My answer\"))"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\n\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackQuestionId\\\": \\\"questionId\\\",\\n\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + \"  \\\"giver\\\": \\\"giver@email.com\\\",\\n\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + \"  \\\"recipient\\\": \\\"recipient@email.com\\\",\\n\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackSessionName\\\": \\\"Session1\\\",\\n\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + \"  \\\"courseId\\\": \\\"CS3281\\\",\\n\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + \"  \\\"responseDetails\\\": {\\n\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                + \"    \\\"answer\\\": \\\"My answer\\\",\\n\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + \"    \\\"questionType\\\": \\\"TEXT\\\"\\n\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                + \"  },\\n\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + \"  \\\"giverSection\\\": \\\"giverSection\\\",\\n\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + \"  \\\"recipientSection\\\": \\\"recipientSection\\\",\\n\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackResponseId\\\": \\\"questionId%giver@email.com%recipient@email.com\\\"\\n\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + \"}\", JsonUtils.toJson(fra));"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\\"feedbackQuestionId\\\":\\\"questionId\\\",\\\"giver\\\":\\\"giver@email.com\\\",\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + \"\\\"recipient\\\":\\\"recipient@email.com\\\",\\\"feedbackSessionName\\\":\\\"Session1\\\",\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                + \"\\\"courseId\\\":\\\"CS3281\\\",\\\"responseDetails\\\":{\\\"answer\\\":\\\"My answer\\\",\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                + \"\\\"questionType\\\":\\\"TEXT\\\"},\\\"giverSection\\\":\\\"giverSection\\\",\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                + \"\\\"recipientSection\\\":\\\"recipientSection\\\",\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"                + \"\\\"feedbackResponseId\\\":\\\"questionId%giver@email.com%recipient@email.com\\\"}\","},{"lineNumber":106,"author":{"gitId":"-"},"content":"                JsonUtils.toCompactJson(fra));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":3,"-":105}},{"path":"src/test/java/teammates/logic/api/EmailGeneratorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.appengine.api.log.AppLogLine;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.appengine.api.log.LogService.LogLevel;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.test.EmailChecker;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * SUT: {@link EmailGenerator}."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EmailGeneratorTest extends BaseLogicTest {"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void prepareTestData() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        dataBundle \u003d loadDataBundle(\"/EmailGeneratorTest.json\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1InCourse3 \u003d dataBundle.feedbackSessions.get(\"session1InCourse3\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2InCourse3 \u003d dataBundle.feedbackSessions.get(\"session2InCourse3\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1InCourse4 \u003d dataBundle.feedbackSessions.get(\"session1InCourse4\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2InCourse4 \u003d dataBundle.feedbackSessions.get(\"session2InCourse4\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // opened and unpublished."},{"lineNumber":51,"author":{"gitId":"-"},"content":"        session1InCourse3.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-20));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session1InCourse3\", session1InCourse3);"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // closed and unpublished"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        session2InCourse3.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-19));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        session2InCourse3.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        session2InCourse3.setDeletedTime(null);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session2InCourse3\", session2InCourse3);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // opened and published."},{"lineNumber":61,"author":{"gitId":"-"},"content":"        session1InCourse4.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-19));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        session1InCourse4.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session1InCourse4\", session1InCourse4);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // closed and published"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        session2InCourse4.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-18));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        session2InCourse4.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        session2InCourse4.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session2InCourse4\", session2InCourse4);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void testGenerateSessionLinksRecoveryEmail() throws IOException {"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ______TS(\"invalid email address\");"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \"non-existing-student\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        verifyEmail(email, \"non-existing-student\", subject,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryNonExistingStudentEmail.html\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ______TS(\"no sessions found\");"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse1 \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":91,"author":{"gitId":"-"},"content":"                student1InCourse1.getEmail());"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1InCourse1.email, subject,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryNoSessionsFoundEmail.html\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: found opened or closed but unpublished Sessions\");"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse3 \u003d dataBundle.students.get(\"student1InCourse3\");"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":102,"author":{"gitId":"-"},"content":"                student1InCourse3.getEmail());"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1InCourse3.email, subject,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryOpenedOrClosedButUnpublishedSessions.html\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: found opened or closed and  published Sessions\");"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse4 \u003d dataBundle.students.get(\"student1InCourse4\");"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":114,"author":{"gitId":"-"},"content":"                student1InCourse4.getEmail());"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1InCourse4.email, subject,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryOpenedOrClosedAndpublishedSessions.html\");"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void testGenerateFeedbackSessionEmails() throws IOException {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d fsLogic.getFeedbackSession(\"First feedback session\", \"idOfTypicalCourse1\");"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d studentsLogic.getStudentForEmail(course.getId(), \"student1InCourse1@gmail.tmt\");"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StudentAttributes unregisteredStudent \u003d studentsLogic.getStudentForEmail(\"idOfTypicalCourse1\","},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \"student1UnregisteredInCourse1@gmail.tmt\");"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(course.getId(), \"instructor1@course1.tmt\");"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(session.getCourseId());"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(session.getCourseId());"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorToNotify \u003d instructorsLogic.getInstructorForGoogleId(session.getCourseId(),"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                instructor1.getGoogleId());"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session opening emails\");"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new EmailGenerator().generateFeedbackSessionOpeningEmails(session);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(11, emails.size());"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.FEEDBACK_OPENING.getSubject(),"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                       course.getName(), session.getFeedbackSessionName());"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionOpeningEmailForStudent.html\");"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionOpeningEmailForInstructor.html\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session reminders\");"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionReminderEmails(session, students, instructors,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                instructorToNotify);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // (5 instructors, 6 students reminded) and (1 instructor to be notified)"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(12, emails.size());"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_SESSION_REMINDER.getSubject(),"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String lineInEmailCopyToInstructor \u003d \"The email below has been sent to students of course:\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Verify the student reminder email"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionReminderEmailForStudent.html\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // Verify the Student email copy send to the instructor"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \"/sessionReminderEmailCopyToInstructor.html\", lineInEmailCopyToInstructor);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Verify the instructor reminder email"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String lineInEmailToInstructor \u003d"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \"/web/instructor/sessions/submission?courseid\u003didOfTypicalCourse1\u0026fsname\u003dFirst%20feedback%20session\";"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \"/sessionReminderEmailForInstructor.html\", lineInEmailToInstructor);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session closing alerts\");"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosingEmails(session);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(8, emails.size());"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_CLOSING.getSubject(),"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // student1 has completed the feedback session and closing alert is only sent for those who are"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // yet to complete, so we resort to student5"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        StudentAttributes student5 \u003d studentsLogic.getStudentForEmail(course.getId(), \"student5InCourse1@gmail.tmt\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : emails) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (email.getRecipient().equals(student1.email)) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                fail(\"student1 has completed the session and are not supposed to receive email\");"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student5.email, subject, \"/sessionClosingEmailForStudent.html\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionClosingEmailForInstructor.html\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session closed alerts\");"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosedEmails(session);"},{"lineNumber":196,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(8, emails.size());"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_CLOSED.getSubject(),"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionClosedEmailForInstructor.html\");"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session published alerts\");"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionPublishedEmails(session);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(11, emails.size());"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_PUBLISHED.getSubject(),"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionPublishedEmailForStudent.html\");"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionPublishedEmailForInstructor.html\");"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session unpublished alerts\");"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionUnpublishedEmails(session);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertEquals(11, emails.size());"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_UNPUBLISHED.getSubject(),"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionUnpublishedEmailForStudent.html\");"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionUnpublishedEmailForInstructor.html\");"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all feedback sessions of course email to new student. \""},{"lineNumber":226,"author":{"gitId":"-"},"content":"                + \"Edited student has joined the course\");"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":229,"author":{"gitId":"-"},"content":"                session.getCourseId(), student1.email, Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/summaryOfFeedbackSessionsOfCourseEmailForStudent.html\");"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all feedback sessions of course email to new student. \""},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + \"Edited student has not joined the course\");"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":238,"author":{"gitId":"-"},"content":"                session.getCourseId(), unregisteredStudent.email,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        verifyEmail(email, unregisteredStudent.email, subject,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                \"/summaryOfFeedbackSessionsOfCourseEmailForUnregisteredStudent.html\");"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all regenerated feedback session links of course email to student. \""},{"lineNumber":246,"author":{"gitId":"-"},"content":"                + \"Student has joined the course\");"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse(session.getCourseId(), student1.email,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                                            Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(), course.getName(), course.getId());"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/summaryOfFeedbackSessionsOfCourseEmailForRegeneratedStudent.html\");"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all regenerated feedback session links of course email to student. \""},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + \"Student has not joined the course\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse(session.getCourseId(), unregisteredStudent.email,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                                            Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(), course.getName(), course.getId());"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        verifyEmail(email, unregisteredStudent.email, subject,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                \"/summaryOfFeedbackSessionsOfCourseEmailForRegeneratedUnregisteredStudent.html\");"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"        ______TS(\"no email alerts sent for sessions not answerable/viewable for students\");"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes notAnswerableSession \u003d"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                fsLogic.getFeedbackSession(\"Not answerable feedback session\", \"idOfTypicalCourse2\");"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionOpeningEmails(notAnswerableSession);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosingEmails(notAnswerableSession);"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosedEmails(notAnswerableSession);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionPublishedEmails(notAnswerableSession);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionUnpublishedEmails(notAnswerableSession);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void testGenerateFeedbackSessionEmails_testSanitization() throws IOException {"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d fsLogic.getFeedbackSession(\"Normal feedback session name\","},{"lineNumber":290,"author":{"gitId":"-"},"content":"                                                                       \"idOfTestingSanitizationCourse\");"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d studentsLogic.getStudentForEmail(course.getId(), \"normal@sanitization.tmt\");"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(course.getId(), \"instructor1@sanitization.tmt\");"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session opening emails: sanitization required\");"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new EmailGenerator().generateFeedbackSessionOpeningEmails(session);"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertEquals(2, emails.size());"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.FEEDBACK_OPENING.getSubject(),"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                \"/sessionOpeningEmailTestingSanitzationForStudent.html\");"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                \"/sessionOpeningEmailTestingSanitizationForInstructor.html\");"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session closed alerts: sanitization required\");"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosedEmails(session);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        assertEquals(2, emails.size());"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_CLOSED.getSubject(),"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \"/sessionClosedEmailTestingSanitizationForStudent.html\");"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \"/sessionClosedEmailTestingSanitizationForInstructor.html\");"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        ______TS(\"feedback sessions summary of course email: sanitization required\");"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":326,"author":{"gitId":"-"},"content":"                session.getCourseId(), student1.email, Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                \"/summaryOfFeedbackSessionsOfCourseEmailTestingSanitizationForStudent.html\");"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public void testGenerateInstructorJoinEmail() throws IOException {"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"        ______TS(\"instructor new account email\");"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"        String instructorEmail \u003d \"instructor@email.tmt\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        String instructorName \u003d \"Instr\";"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        String regkey \u003d \"skxxxxxxxxxks\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d InstructorAttributes"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                .builder(\"courseId\", instructorEmail)"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .withGoogleId(\"googleId\")"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .withName(\"Instructor Name\")"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        instructor.key \u003d regkey;"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        AccountAttributes inviter \u003d AccountAttributes.builder(\"otherGoogleId\")"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                .withEmail(\"instructor-joe@gmail.com\")"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                .withName(\"Joe Wilson\")"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        String joinLink \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(regkey))"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                .withInstructorInstitution(\"Test Institute\")"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR)"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator()"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                .generateNewInstructorAccountJoinEmail(instructorEmail, instructorName, joinLink);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), instructorName);"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructorEmail, subject, \"/instructorNewAccountEmail.html\");"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        assertEquals(email.getBcc(), Config.SUPPORT_EMAIL);"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email\");"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d CourseAttributes"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .builder(\"course-id\")"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateInstructorCourseJoinEmail(inviter, instructor, course);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor.email, subject, \"/instructorCourseJoinEmail.html\");"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    public void testGenerateFeedbackSessionSummaryOfCourse_noSessionLinksFound() throws IOException {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                fsLogic.getFeedbackSession(\"Feedback session with no emails sent\", \"idOfTestingNoEmailsSentCourse\");"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"        StudentAttributes noLinksStudent \u003d studentsLogic.getStudentForEmail(course.getId(), \"student1@noemailssent.tmt\");"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all feedback sessions of course email to new student. \""},{"lineNumber":392,"author":{"gitId":"-"},"content":"                + \"No feedback session opening or published emails have been sent\");"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":395,"author":{"gitId":"-"},"content":"                                                            session.getCourseId(), noLinksStudent.email,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                                                            Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"        verifyEmail(email, noLinksStudent.email, subject,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                    \"/summaryOfFeedbackSessionsOfCourseEmailForNoLinksStudent.html\");"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all regenerated feedback session links of course email to student. \""},{"lineNumber":403,"author":{"gitId":"-"},"content":"                + \"No feedback session opening or published emails have been sent\");"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse(session.getCourseId(), noLinksStudent.email,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(), course.getName(), course.getId());"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"        verifyEmail(email, noLinksStudent.email, subject,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                    \"/summaryOfFeedbackSessionsOfCourseEmailForNoLinksRegeneratedStudent.html\");"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public void testGenerateInstructorJoinEmail_testSanitization() throws IOException {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        ______TS(\"instructor new account email: sanitization required\");"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(\"idOfTestingSanitizationCourse\", \"instructor1@sanitization.tmt\");"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        String joinLink \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(instructor1.key))"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                .withInstructorInstitution(\"Test Institute\")"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR)"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator()"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                .generateNewInstructorAccountJoinEmail(instructor1.email, instructor1.name, joinLink);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        // InstructorAttributes sanitizes name before saving"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(),"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                SanitizationHelper.sanitizeForHtml(instructor1.name));"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject, \"/instructorNewAccountEmailTestingSanitization.html\");"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        assertEquals(email.getBcc(), Config.SUPPORT_EMAIL);"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email: sanitization required\");"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"        AccountAttributes inviter \u003d dataBundle.accounts.get(\"instructor1OfTestingSanitizationCourse\");"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(\"idOfTestingSanitizationCourse\");"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateInstructorCourseJoinEmail(inviter, instructor1, course);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject, \"/instructorCourseJoinEmailTestingSanitization.html\");"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email after Google ID reset\");"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateInstructorCourseRejoinEmailAfterGoogleIdReset(instructor1, course, null);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"                \"/instructorCourseRejoinAfterGoogleIdResetEmail.html\");"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email after Google ID reset (with institute name set)\");"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator()"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                .generateInstructorCourseRejoinEmailAfterGoogleIdReset(instructor1, course, \"Test Institute\");"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                \"/instructorCourseRejoinAfterGoogleIdResetEmailWithInstitute.html\");"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    public void testGenerateStudentCourseJoinEmail() throws IOException {"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"        ______TS(\"student course join email\");"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d CourseAttributes"},{"lineNumber":469,"author":{"gitId":"-"},"content":"                .builder(\"idOfTypicalCourse1\")"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                StudentAttributes.builder(\"\", \"student@email.tmt\")"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                        .withName(\"Student Name\")"},{"lineNumber":477,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        student.key \u003d \"skxxxxxxxxxks\";"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateStudentCourseJoinEmail(course, student);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithCoOwnersJoinEmail.html\");"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"        ______TS(\"student course with co-owners join email after Google ID reset\");"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseRejoinEmailAfterGoogleIdReset(course, student);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                                course.getName(), course.getId());"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithCoOwnersRejoinAfterGoogleIdResetEmail.html\");"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"        ______TS(\"student course (without co-owners) join email\");"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"        course \u003d CourseAttributes.builder(\"course-id\")"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseJoinEmail(course, student);"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithoutCoOwnersJoinEmail.html\");"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"        ______TS(\"student course (without-co-owners) join email after Google ID reset\");"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseRejoinEmailAfterGoogleIdReset(course, student);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                                course.getName(), course.getId());"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithoutCoOwnersRejoinAfterGoogleIdResetEmail.html\");"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    public void testGenerateStudentCourseJoinEmail_testSanitization() throws IOException {"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"        ______TS(\"student course join email: sanitization required\");"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(\"idOfTestingSanitizationCourse\");"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d studentsLogic.getStudentForEmail(course.getId(), \"normal@sanitization.tmt\");"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateStudentCourseJoinEmail(course, student1);"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/studentCourseJoinEmailTestingSanitization.html\");"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"        ______TS(\"student course join email after Google ID reset: sanitization required\");"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseRejoinEmailAfterGoogleIdReset(course, student1);"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":531,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/studentCourseRejoinAfterGoogleIdResetEmailTestingSanitization.html\");"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    public void testGenerateUserCourseRegisterEmail() throws IOException {"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"        ______TS(\"student course register email\");"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d CourseAttributes"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                .builder(\"idOfTypicalCourse1\")"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        String name \u003d \"User Name\";"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        String emailAddress \u003d \"user@email.tmt\";"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        String googleId \u003d \"user.googleid\";"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                new EmailGenerator().generateUserCourseRegisteredEmail(name, emailAddress, googleId, false, course);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.USER_COURSE_REGISTER.getSubject(),"},{"lineNumber":553,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        verifyEmail(email, emailAddress, subject, \"/studentCourseRegisterEmail.html\");"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course register email\");"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateUserCourseRegisteredEmail(name, emailAddress, googleId, true, course);"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.USER_COURSE_REGISTER.getSubject(),"},{"lineNumber":561,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":562,"author":{"gitId":"-"},"content":""},{"lineNumber":563,"author":{"gitId":"-"},"content":"        verifyEmail(email, emailAddress, subject, \"/instructorCourseRegisterEmail.html\");"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    public void testGenerateCompiledLogsEmail() throws IOException {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        AppLogLine typicalLogLine \u003d new AppLogLine();"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        typicalLogLine.setLogLevel(LogLevel.ERROR);"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        typicalLogLine.setLogMessage(\"Typical log message\");"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"        AppLogLine logLineWithLineBreak \u003d new AppLogLine();"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        logLineWithLineBreak.setLogLevel(LogLevel.ERROR);"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        logLineWithLineBreak.setLogMessage(\"Log line \\n with line break \u003cbr\u003e and also HTML br tag\");"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateCompiledLogsEmail("},{"lineNumber":578,"author":{"gitId":"-"},"content":"                Arrays.asList(typicalLogLine, logLineWithLineBreak));"},{"lineNumber":579,"author":{"gitId":"-"},"content":""},{"lineNumber":580,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.SEVERE_LOGS_COMPILATION.getSubject(), Config.APP_VERSION);"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"        verifyEmail(email, Config.SUPPORT_EMAIL, subject, \"/severeLogsCompilationEmail.html\");"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"    private void verifyEmail(EmailWrapper email, String recipient, String subject, String emailContentFilePath)"},{"lineNumber":586,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        // check recipient"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        assertEquals(recipient, email.getRecipient());"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"        // check subject"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        assertEquals(subject, email.getSubject());"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"        // check sender name"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        assertEquals(Config.EMAIL_SENDERNAME, email.getSenderName());"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"        // check sender email"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        assertEquals(Config.EMAIL_SENDEREMAIL, email.getSenderEmail());"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"        // check reply to address"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        assertEquals(Config.EMAIL_REPLYTO, email.getReplyTo());"},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"-"},"content":"        String emailContent \u003d email.getContent();"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"        // check email body for expected content"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        EmailChecker.verifyEmailContent(emailContent, emailContentFilePath);"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"        // check email body for no left placeholders"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        assertFalse(emailContent.contains(\"${\"));"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"    private void verifyEmailReceivedCorrectly("},{"lineNumber":612,"author":{"gitId":"-"},"content":"            List\u003cEmailWrapper\u003e actualEmails, String recipient, String subject, String emailContentFilePath)"},{"lineNumber":613,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(actualEmails, recipient, subject, emailContentFilePath, \"\");"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"    private void verifyEmailReceivedCorrectly("},{"lineNumber":618,"author":{"gitId":"-"},"content":"            List\u003cEmailWrapper\u003e actualEmails, String recipient, String subject,"},{"lineNumber":619,"author":{"gitId":"-"},"content":"            String emailContentFilePath, String containsString)"},{"lineNumber":620,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        boolean hasReceivedEmailCorrectly \u003d false;"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : actualEmails) {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"            if (email.getRecipient().equals(recipient) \u0026\u0026 email.getContent().contains(containsString)) {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                verifyEmail(email, recipient, subject, emailContentFilePath);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                hasReceivedEmailCorrectly \u003d true;"},{"lineNumber":626,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        assertTrue(hasReceivedEmailCorrectly);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":1,"-":630}},{"path":"src/test/java/teammates/ui/webapi/FeedbackSessionClosedRemindersActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelperExtension;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.request.SendEmailRequest;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackSessionClosedRemindersAction}."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FeedbackSessionClosedRemindersActionTest"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        extends BaseActionTest\u003cFeedbackSessionClosedRemindersAction\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return Const.CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void testExecute() throws Exception {"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ______TS(\"default state of typical data bundle: 0 sessions closed recently\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FeedbackSessionClosedRemindersAction action \u003d getAction();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded(action);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ______TS(\"1 session closed recently, 1 session closed recently with disabled closed reminder, \""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                 + \"1 session closed recently but still in grace period\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Session is closed recently"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        session1.setTimeZone(ZoneId.of(\"UTC\"));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        session1.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        session1.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":61,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session1.getFeedbackSessionName(), session1.getCourseId())"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        .withTimeZone(session1.getTimeZone())"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        .withStartTime(session1.getStartTime())"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        .withEndTime(session1.getEndTime())"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        session1.setSentOpenEmail(false); // fsLogic will set the flag to false"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        verifyPresentInDatastore(session1);"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Ditto, but with disabled closed reminder"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        session2.setTimeZone(ZoneId.of(\"UTC\"));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        session2.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        session2.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        session2.setClosingEmailEnabled(false);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session2.getFeedbackSessionName(), session2.getCourseId())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        .withTimeZone(session2.getTimeZone())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        .withStartTime(session2.getStartTime())"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        .withEndTime(session2.getEndTime())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        .withIsClosingEmailEnabled(session2.isClosingEmailEnabled())"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        session2.setSentOpenEmail(false); // fsLogic will set the flag to false"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        verifyPresentInDatastore(session2);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Still in grace period; closed reminder should not be sent"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session3 \u003d typicalBundle.feedbackSessions.get(\"gracePeriodSession\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        session3.setTimeZone(ZoneId.of(\"UTC\"));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        session3.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        session3.setEndTime(Instant.now());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":95,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session3.getFeedbackSessionName(), session3.getCourseId())"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        .withTimeZone(session3.getTimeZone())"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        .withStartTime(session3.getStartTime())"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        .withEndTime(session3.getEndTime())"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        session3.setSentOpenEmail(false); // fsLogic will set the flag to false"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        verifyPresentInDatastore(session3);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        action \u003d getAction();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"daongochieu2810"},"content":"        // 5 students and 5 instructors in course1 and 4 students have submitted"},{"lineNumber":108,"author":{"gitId":"daongochieu2810"},"content":"        verifySpecifiedTasksAdded(action, Const.TaskQueue.SEND_EMAIL_QUEUE_NAME, 6);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String courseName \u003d logic.getCourse(session1.getCourseId()).getName();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cTaskWrapper\u003e tasksAdded \u003d action.getTaskQueuer().getTasksAdded();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        for (TaskWrapper task : tasksAdded) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            SendEmailRequest requestBody \u003d (SendEmailRequest) task.getRequestBody();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            EmailWrapper email \u003d requestBody.getEmail();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(String.format(EmailType.FEEDBACK_CLOSED.getSubject(), courseName,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                       session1.getFeedbackSessionName()),"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                         email.getSubject());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        ______TS(\"1 session closed recently with closed emails sent\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        session1.setSentClosedEmail(true);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":124,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session1.getFeedbackSessionName(), session1.getCourseId())"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        .withSentClosedEmail(session1.isSentClosedEmail())"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        action \u003d getAction();"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded(action);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":2,"-":134}},{"path":"src/web/app/components/question-edit-form/feedback-path.pipe.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"import { FeedbackParticipantType } from \u0027../../../types/api-output\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"describe(\u0027GiverTypeDescriptionPipe\u0027, () \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  const pipe: GiverTypeDescriptionPipe \u003d new GiverTypeDescriptionPipe();"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  it(\u0027create an instance\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    expect(pipe).toBeTruthy();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.SELF\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.SELF))"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Feedback session creator (i.e., me)\u0027);"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.STUDENTS\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.STUDENTS))"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Students in this course\u0027);"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.INSTRUCTORS\u0027, () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Instructors in this course\u0027);"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.TEAMS\u0027, () \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.TEAMS))"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Teams in this course\u0027);"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM))"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"        .toBe(\u0027Unknown\u0027);"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform default\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(\u0027\u0027 as FeedbackParticipantType))"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Unknown\u0027);"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"});"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"describe(\u0027RecipientTypeDescriptionPipe\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  const pipe: RecipientTypeDescriptionPipe \u003d new RecipientTypeDescriptionPipe();"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  it(\u0027create an instance\u0027, () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    expect(pipe).toBeTruthy();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.SELF\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.SELF))"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Giver (Self feedback)\u0027);"},{"lineNumber":53,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":55,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.STUDENTS\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.STUDENTS))"},{"lineNumber":57,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Other students in the course\u0027);"},{"lineNumber":58,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":59,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":60,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.INSTRUCTORS\u0027, () \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":62,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Instructors in the course\u0027);"},{"lineNumber":63,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":64,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":65,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.TEAMS\u0027, () \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.TEAMS))"},{"lineNumber":67,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Other teams in the course\u0027);"},{"lineNumber":68,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":69,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":70,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM\u0027, () \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM))"},{"lineNumber":72,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\"Giver\u0027s team\");"},{"lineNumber":73,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":74,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM_MEMBERS\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM_MEMBERS))"},{"lineNumber":77,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\"Giver\u0027s team members\");"},{"lineNumber":78,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":80,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF))"},{"lineNumber":82,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\"Giver\u0027s team members and Giver\");"},{"lineNumber":83,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":84,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":85,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.NONE\u0027, () \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.NONE))"},{"lineNumber":87,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Nobody specific (For general class feedback)\u0027);"},{"lineNumber":88,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":89,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":90,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.TEAMS_EXCLUDING_SELF\u0027, () \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.TEAMS_EXCLUDING_SELF))"},{"lineNumber":92,"author":{"gitId":"daongochieu2810"},"content":"        .toBe(\u0027Unknown\u0027);"},{"lineNumber":93,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":94,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":95,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform default\u0027, () \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(\u0027\u0027 as FeedbackParticipantType))"},{"lineNumber":97,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Unknown\u0027);"},{"lineNumber":98,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":99,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"daongochieu2810":85,"-":15}},{"path":"src/web/app/components/question-edit-form/question-edit-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".question-number-select {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  height: 32px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  width: auto;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  display: inline;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  margin-left: 6px;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  margin-right: 5px;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":".background-color-light-blue {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  background-color: #EAEFF5;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":".padding-15px {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":".question-basic-info {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  padding-left: 15px;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":".padding-left-15px {"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"  padding-left: 15px;"},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":".background-color-light-green {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  background-color: #E0EEEE;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":".margin-top-15px {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  margin-top: 15px;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":".visibility-title,"},{"lineNumber":35,"author":{"gitId":"-"},"content":".feedback-path-title {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  color: #2AABD2;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":".background-color-white {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  background-color: white;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":".visibility-message \u003e ul {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  margin-top: 5px;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  padding: 5px 25px;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":".visibility-message \u003e ul \u003e li {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  cursor: default;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":".background-color-warning {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  background-color: #FCF8E3;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":".dropdown-item {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":".collapse-caret {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  margin-right: 10px;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":".collapse-qn-description {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  font-weight: 300;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":".white-space-normal {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  white-space: normal;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":4,"-":67}},{"path":"src/web/app/components/question-edit-form/question-edit-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  QuestionEditDetailsFormModule,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-edit-details-form/question-edit-details-form.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { QuestionEditFormComponent } from \u0027./question-edit-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  VisibilityControlNamePipe,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  VisibilityTypeDescriptionPipe,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  VisibilityTypeNamePipe,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027./visibility-setting.pipe\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { mockTinyMceUuid } from \u0027../../../test-helpers/mock-tinymce-uuid\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { PanelChevronModule } from \u0027../panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"import { EXAMPLE_ESSAY_QUESTION_MODEL } from \u0027../../pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-data\u0027;"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"import { QuestionEditFormModel } from \u0027./question-edit-form-model\u0027;"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"describe(\u0027QuestionEditFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  let component: QuestionEditFormComponent;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionEditFormComponent\u003e;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  mockTinyMceUuid();"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":37,"author":{"gitId":"-"},"content":"        QuestionEditFormComponent,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        GiverTypeDescriptionPipe,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        RecipientTypeDescriptionPipe,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        VisibilityControlNamePipe,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        VisibilityTypeDescriptionPipe,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        VisibilityTypeNamePipe,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":45,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        RichTextEditorModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        QuestionEditDetailsFormModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        VisibilityMessagesModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        BrowserAnimationsModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        PanelChevronModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionEditFormComponent);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027set up with EXAMPLE_ESSAY_QUESTION_MODEL\u0027, () \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"daongochieu2810"},"content":"    component.formModel \u003d EXAMPLE_ESSAY_QUESTION_MODEL;"},{"lineNumber":72,"author":{"gitId":"daongochieu2810"},"content":"    const model: QuestionEditFormModel \u003d component.model;"},{"lineNumber":73,"author":{"gitId":"daongochieu2810"},"content":"    expect(model).toBe(EXAMPLE_ESSAY_QUESTION_MODEL);"},{"lineNumber":74,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.isUsingOtherFeedbackPath).toBeFalsy();"},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.commonVisibilitySettingName).toBeTruthy();"},{"lineNumber":76,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.isUsingOtherVisibilitySetting).toBeFalsy();"},{"lineNumber":77,"author":{"gitId":"daongochieu2810"},"content":"    expect(component.isCustomFeedbackVisibilitySettingAllowed).toBeTruthy();"},{"lineNumber":78,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":80,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027triggerModelChange with EXAMPLE_ESSAY_QUESTION_MODEL\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"    component.formModel \u003d EXAMPLE_ESSAY_QUESTION_MODEL;"},{"lineNumber":82,"author":{"gitId":"daongochieu2810"},"content":"    component.formModelChange.subscribe((data: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"daongochieu2810"},"content":"      component.formModel \u003d data;"},{"lineNumber":84,"author":{"gitId":"daongochieu2810"},"content":"    });"},{"lineNumber":85,"author":{"gitId":"daongochieu2810"},"content":"    const testStr: string \u003d \u0027Hello World\u0027;"},{"lineNumber":86,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027questionNumber\u0027, 2);"},{"lineNumber":87,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027questionBrief\u0027, testStr);"},{"lineNumber":88,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027questionDescription\u0027, testStr);"},{"lineNumber":89,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027isQuestionHasResponses\u0027, true);"},{"lineNumber":90,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":91,"author":{"gitId":"daongochieu2810"},"content":"    const model: QuestionEditFormModel \u003d component.model;"},{"lineNumber":92,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.questionNumber).toBe(2);"},{"lineNumber":93,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.questionBrief).toBe(testStr);"},{"lineNumber":94,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.questionDescription).toBe(testStr);"},{"lineNumber":95,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.isQuestionHasResponses).toBeTruthy();"},{"lineNumber":96,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":97,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default view\u0027, () \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":101,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"daongochieu2810":31,"-":70}},{"path":"src/web/app/components/question-text-with-info/question-text-with-info.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { By } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  QuestionAdditionalInfoModule,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-additional-info/question-additional-info.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../teammates-router/teammates-router.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { QuestionTextWithInfoComponent } from \u0027./question-text-with-info.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"describe(\u0027QuestionTextWithInfoComponent\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  let component: QuestionTextWithInfoComponent;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionTextWithInfoComponent\u003e;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      declarations: [QuestionTextWithInfoComponent],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        QuestionAdditionalInfoModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        TeammatesRouterModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionTextWithInfoComponent);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  const textQuestionDetails: FeedbackTextQuestionDetails \u003d {"},{"lineNumber":40,"author":{"gitId":"moziliar"},"content":"    shouldAllowRichText: true,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    questionText: \u0027Text question details\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    recommendedLength: 100,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  const mcqQuestionDetails: FeedbackMcqQuestionDetails \u003d {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    questionText: \u0027MCQ question details\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    hasAssignedWeights: false,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    mcqWeights: [],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mcqOtherWeight: 0,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    numOfMcqChoices: 2,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    mcqChoices: [\u0027a\u0027, \u0027b\u0027],"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    otherEnabled: false,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    generateOptionsFor: FeedbackParticipantType.NONE,"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027should not show control link and question details for TEXT questions\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    component.questionDetails \u003d textQuestionDetails;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const questionDetailControlLink: any \u003d fixture.debugElement.query(By.css(\u0027a\u0027));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const infoWrapper: any \u003d fixture.debugElement.query(By.css(\u0027div\u0027));"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    expect(questionDetailControlLink).toBeNull();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    expect(infoWrapper).toBeNull();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  it(\u0027should show control link when question type is not TEXT\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    component.questionDetails \u003d mcqQuestionDetails;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  it(\u0027should show question detail when click control link\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    component.questionDetails \u003d mcqQuestionDetails;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    const questionDetailControlLink: any \u003d fixture.debugElement.query(By.css(\u0027a\u0027));"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    questionDetailControlLink.nativeElement.click();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"moziliar":1,"-":92}},{"path":"src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"\u003cdiv class\u003d\"plain-text-area\" *ngIf\u003d\"!questionDetails.shouldAllowRichText\"\u003e"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  \u003ctextarea [ngModel]\u003d\"responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e\u003c/textarea\u003e"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"\u003ctm-rich-text-editor *ngIf\u003d\"questionDetails.shouldAllowRichText\" [richText]\u003d\"responseDetails.answer\" (richTextChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [isDisabled]\u003d\"isDisabled\"\u003e\u003c/tm-rich-text-editor\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"margin-top-7px text-secondary text-right\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"recommended-length\" *ngIf\u003d\"questionDetails.recommendedLength\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Recommended length for the answer: {{ questionDetails.recommendedLength }} words"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"response-length\" *ngIf\u003d\"questionDetails.recommendedLength\" [ngClass]\u003d\"{\u0027text-success\u0027: isWordCountWithinRecommendedBound }\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Response length: {{ wordCount }} words"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"moziliar":4,"-":8}},{"path":"src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-top-7px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-top: 7px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":".plain-text-area {"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"  height: 120px;"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":".plain-text-area \u003e textarea {"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"  box-sizing: border-box;"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"  width: 100%;"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"  height: 100%;"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"}"}],"authorContributionMap":{"moziliar":10,"-":3}},{"path":"src/web/app/components/question-types/question-edit-details-form/constsum-options-question-edit-details-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbr\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"options-section\" class\u003d\"col-sm-9\" cdkDropList (cdkDropListDropped)\u003d\"onConstsumOptionDropped($event)\" [cdkDropListDisabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cdiv class\u003d\"row margin-bottom-20px padding-left-12px\" *ngFor\u003d\"let option of model.constSumOptions; let i \u003d index;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        trackBy: trackConstsumOption\" cdkDrag cdkDragLockAxis\u003d\"y\"\u003e"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv cdkDragHandle\u003e"},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":"            \u003cspan class\u003d\"input-group-addon\"\u003e\u0026#8597; \u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv class\u003d\"flex-grow-1\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-field (elementDeleted)\u003d\"onConstsumOptionDeleted(i)\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                                  [isEditable]\u003d\"isEditable\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                  (textChange)\u003d\"onConstsumOptionEntered($event, i)\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                                  [text]\u003d\"option\"\u003e\u003c/tm-constsum-options-field\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-sm-9\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-add-option\" class\u003d\"btn btn-primary\" name\u003d\"button\" ngDefaultControl"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"!isEditable\" (click)\u003d\"increaseNumberOfConstsumOptions()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e add more options"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cb\u003eTotal Points to distribute:\u003c/b\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-11 offset-1 margin-top-10px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"total-points-radio\" class\u003d\"form-check-input\" type\u003d\"radio\" [ngModel]\u003d\"model.pointsPerOption\" [value]\u003d\"false\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                   (ngModelChange)\u003d\"triggerModelChange(\u0027pointsPerOption\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"total-points\" type\u003d\"number\" class\u003d\"form-control\" min\u003d\"1\" step\u003d\"1\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                   [ngModel]\u003d\"!model.pointsPerOption ? model.points : \u0027\u0027\" (ngModelChange)\u003d\"triggerModelChange(\u0027points\u0027, $event)\" [disabled]\u003d\"!isEditable || model.pointsPerOption\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cb class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Respondents will have to distribute the total points specified here among the options, e.g. if you specify 100 points here and there are 3 options, respondents will have to distribute 100 points among 3 options.\"\u003ein total\u003c/b\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/label\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"per-option-points-radio\" class\u003d\"form-check-input\" type\u003d\"radio\" [ngModel]\u003d\"model.pointsPerOption\" [value]\u003d\"true\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                   (ngModelChange)\u003d\"triggerModelChange(\u0027pointsPerOption\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"per-option-points\" type\u003d\"number\" class\u003d\"form-control\" min\u003d\"1\" step\u003d\"1\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                   [ngModel]\u003d\"model.pointsPerOption ? model.points : \u0027\u0027\" (ngModelChange)\u003d\"triggerModelChange(\u0027points\u0027, $event)\" [disabled]\u003d\"!isEditable || !model.pointsPerOption\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cb class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"The number of points to distribute will vary based on the number of options, e.g. if you specify 100 points here and there are 3 options, the total number of points to distribute among 3 options will be 300 (i.e. 100 x 3).\"\u003eX (number of options)\u003c/b\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/label\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 padding-left-33px margin-top-10px\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cinput id\u003d\"uneven-distribution-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                 [ngModel]\u003d\"model.forceUnevenDistribution\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                 (ngModelChange)\u003d\"onForceUnevenDistribution($event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cselect id\u003d\"uneven-distribution-dropdown\" class\u003d\"form-control\" [ngModel]\u003d\"model.distributePointsFor\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                  [disabled]\u003d\"!isEditable || model.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.NONE\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  (ngModelChange)\u003d\"triggerModelChange(\u0027distributePointsFor\u0027, $event)\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003coption [value]\u003d\"FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              Every option"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003c/option\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003coption [value]\u003d\"FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              At least some options"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/option\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/select\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cb class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"This determines whether a giver can distribute the same number of points to multiple recipients\"\u003eto receive a different number of points\u003c/b\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/label\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":5,"-":69}},{"path":"src/web/app/components/question-types/question-edit-details-form/constsum-options-question-edit-details-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-top-10px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-top: 10px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"AdithyaNarayan"},"content":".margin-bottom-20px {"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"  margin-bottom: 20px;"},{"lineNumber":7,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":".padding-left-12px {"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"  padding-left: 12px;"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":13,"author":{"gitId":"AdithyaNarayan"},"content":".row {"},{"lineNumber":14,"author":{"gitId":"AdithyaNarayan"},"content":"  align-items: center;"},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":".input-group-addon {"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"  cursor: move;"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"  resize: both;"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"  padding: .375rem .75rem;"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"  margin-bottom: 0;"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"  font-weight: 400;"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"  line-height: 1.5;"},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"  color: #495057;"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":"  text-align: center;"},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":"  background-color: #E9ECEF;"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"  border: 1px solid #CED4DA;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":23,"-":5}},{"path":"src/web/app/components/question-types/question-edit-details-form/rank-options-question-edit-details-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbr\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"options-section\" class\u003d\"col-sm-9\" cdkDropList (cdkDropListDropped)\u003d\"onRankOptionDropped($event)\" [cdkDropListDisabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cdiv class\u003d\"row margin-bottom-20px padding-left-12px\" *ngFor\u003d\"let num of model.options; let i \u003d index;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        trackBy: trackRankOption\" cdkDrag cdkDragLockAxis\u003d\"y\"\u003e"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv cdkDragHandle\u003e"},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":"            \u003cspan class\u003d\"input-group-addon\"\u003e\u0026#8597; \u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv class\u003d\"flex-grow-1\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-field (elementDeleted)\u003d\"onRankOptionDeleted($event)\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                                  [isEditable]\u003d\"isEditable\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                  [index]\u003d\"i\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                                  [numberOfRankChoices]\u003d\"model.options.length\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                                  (rankOptionText)\u003d\"onRankOptionEntered($event, i)\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                                  [text]\u003d\"model.options[i]\"\u003e\u003c/tm-rank-options-field\u003e"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-sm-9\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-add-option\" class\u003d\"btn btn-primary\" name\u003d\"button\" ngDefaultControl"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"!isEditable\" (click)\u003d\"increaseNumberOfRankOptions()\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e add more options"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003cbr /\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003clabel class\u003d\"form-check-label margin-bottom-20px margin-right-5px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"duplicate-rank-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\"  [ngModel]\u003d\"model.areDuplicatesAllowed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"         (ngModelChange)\u003d\"triggerModelChange(\u0027areDuplicatesAllowed\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cb\u003eAllow response giver to give the same rank to multiple options\u003c/b\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/label\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-bottom-20px margin-right-5px\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"form-check-label col-sm-9\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cinput id\u003d\"min-options-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [disabled]\u003d\"!isEditable\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"               [ngModel]\u003d\"isMinOptionsToBeRankedEnabled\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"               (ngModelChange)\u003d\"triggerMinOptionsToBeRankedChange($event)\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cb\u003eMinimum number of options a respondent must rank\u003c/b\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/label\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"min-options\" type\u003d\"number\" class\u003d\"form-control col-sm-3\" [disabled]\u003d\"!isMinOptionsToBeRankedEnabled || !isEditable\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"displayValueForMinOptionsToBeRanked\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerModelChange(\u0027minOptionsToBeRanked\u0027, $event)\" min\u003d\"1\" max\u003d\"{{ maxMinOptionsValue }}\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-right-5px\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"form-check-label col-sm-9\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cinput id\u003d\"max-options-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [disabled]\u003d\"!isEditable\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"               [ngModel]\u003d\"isMaxOptionsToBeRankedEnabled\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"               (ngModelChange)\u003d\"triggerMaxOptionsToBeRankedChange($event)\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cb\u003eMaximum number of options a respondent can rank\u003c/b\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/label\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"max-options\" type\u003d\"number\" class\u003d\"form-control col-sm-3\" [disabled]\u003d\"!isMaxOptionsToBeRankedEnabled || !isEditable\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"displayValueForMaxOptionsToBeRanked\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerModelChange(\u0027maxOptionsToBeRanked\u0027, $event)\" [min]\u003d\"isMinOptionsToBeRankedEnabled ? model.minOptionsToBeRanked : 1\" max\u003d\"{{model.options.length}}\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":6,"-":56}},{"path":"src/web/app/components/question-types/question-edit-details-form/rank-options-question-edit-details-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-bottom-20px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".margin-right-5px {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  margin-right: 5px;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":".padding-left-12px {"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"  padding-left: 12px;"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":".row {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":".input-group-addon {"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"  cursor: move;"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"  resize: both;"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"  padding: .375rem .75rem;"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"  margin-bottom: 0;"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"  font-weight: 400;"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"  line-height: 1.5;"},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"  color: #495057;"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":"  text-align: center;"},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":"  background-color: #E9ECEF;"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"  border: 1px solid #CED4DA;"},{"lineNumber":28,"author":{"gitId":"AdithyaNarayan"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":17,"-":11}},{"path":"src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"\u003cdiv class\u003d\"row padding-15px\"\u003e"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  \u003cdiv class\u003d\"col-md-10 allow-rich-text\"\u003e"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"    \u003clabel\u003e"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"      \u003cinput type\u003d\"checkbox\""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":"             [checked]\u003d\"model.shouldAllowRichText\""},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"             (click)\u003d\"triggerModelChange(\u0027shouldAllowRichText\u0027, $event.target.checked)\""},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"             [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"      \u003ca\u003e Allow rich-text formatting (e.g., bold text, links, bullet lists, colors, etc.) in the answers\u003c/a\u003e"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"    \u003c/label\u003e"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"  \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 question-recommended-length\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    [Optional]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"The recommended length is shown to the respondent but not enforced\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      Recommended length"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    for the response:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cinput id\u003d\"recommended-length\" type\u003d\"number\" class\u003d\"form-control\" [ngModel]\u003d\"model.recommendedLength\" (ngModelChange)\u003d\"triggerModelChange(\u0027recommendedLength\u0027, $event)\" [disabled]\u003d\"!isEditable\" min\u003d\"1\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    words"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"moziliar":10,"-":10}},{"path":"src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":".allow-rich-text {"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  color: gray;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".question-recommended-length {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  color: gray;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":".question-recommended-length \u003e input {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  display: inline;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  width: 80px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":4,"-":8}},{"path":"src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackTextQuestionDetails } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DEFAULT_TEXT_QUESTION_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { QuestionEditDetailsFormComponent } from \u0027./question-edit-details-form.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Question details edit form component for text question."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027tm-text-question-edit-details-form\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./text-question-edit-details-form.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./text-question-edit-details-form.component.scss\u0027],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFormComponent\u003cFeedbackTextQuestionDetails\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    super(DEFAULT_TEXT_QUESTION_DETAILS());"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"  ngOnInit(): void {}"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":1,"-":21}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-page.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".main-body {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  width: 1100px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".side-nav {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  width: 150px;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  top: 100px;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  right: 5%;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  position: fixed;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":".flex-container {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  flex-wrap: nowrap;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  padding-right: 160px;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":".section-body {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  padding-bottom: 5px;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":"@media (max-width: 480px) {"},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"  .side-nav {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    display: none;"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":27,"author":{"gitId":"jianhandev"},"content":"  .flex-container {"},{"lineNumber":28,"author":{"gitId":"jianhandev"},"content":"    padding-right: 0;"},{"lineNumber":29,"author":{"gitId":"jianhandev"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":10,"-":20}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-sessions-section/instructor-help-sessions-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eSessions\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 4)\"\u003eSetting Up Sessions\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.TIPS_FOR_CONDUCTION_PEER_EVAL)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.TIPS_FOR_CONDUCTION_PEER_EVAL\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Tips for conducting team peer evaluation sessions\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.TIPS_FOR_CONDUCTION_PEER_EVAL]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      Any evaluation system has both positive and negative effects on those being evaluated."},{"lineNumber":12,"author":{"gitId":"-"},"content":"      As teachers, you are probably keen to maximize the positive effect of this system on your course while minimizing any negative effects."},{"lineNumber":13,"author":{"gitId":"-"},"content":"      Here are some of the things you could do:"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cb\u003eHave frequent peer evaluations.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Rather than have only one peer evaluation at the end of the course, have several peer evaluations at different points of the course. This way, students get frequent peer-feedback about their contribution, giving them plenty of chances to correct their conduct as necessary."},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cb\u003eIgnore early peer evaluations.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Consider not using initial peer evaluations for grading. Let students know that in advance. This gives students time to get used to the system and be more relaxed in giving early feedback to peers."},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cb\u003eInterpret contribution numbers with care.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        If you use ‘Team contribution’ type questions in your peer evaluations, keep in mind the contribution numbers reported by TEAMMATES are based on student perceptions and may not reflect the real contribution of a student. Therefore, use those numbers primarily to identify cases that need further investigation."},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cbr\u003e You may ignore minor variations in the contribution numbers reported by TEAMMATES. The difference between [Equal share] and [Equal share - 2%] is not significant and can very well be due to rounding off within the system."},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cbr\u003e \u003cbr\u003eKeep in mind that it is human nature for one to downplay the value of contributions from others when one’s own contribution is being compared to that of others. As a result, it is common for the ‘perceived contribution’ to be somewhat lower than what the student actually did."},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cbr\u003e When taking further actions based on evaluation reports, also pay attention to the team’s consensus level about the contribution of a student. For example, you can take further actions with more confidence if all team members rated a certain student’s contribution low."},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cb\u003eTolerate unequal contributions.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        This may be a good policy to adopt (If students know this policy, they will be more honest in reporting contribution values):"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003ci\u003eIt is OK to do less than an equal share of the work, as long as you are willing to accept a lower grade than your team members. It is your right to decide how much time you allocate to this course. How you prioritize your work is your own business.\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cb\u003eAnnounce a \u0027cooling off\u0027 period.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        This may be a good guidelines to give to students:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003ci\u003eIf you are unhappy about the peer-feedback received, please allow at least one day to lapse before you fire off a response email. You are likely to respond more rationally when you had some time to think it over. Also keep in mind that we do take note of how well you handle such a situation. You need to act professionally when facing conflicting views, opposition, and even deliberate sabotage.\u003c/i\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_NEW_FEEDBACK)\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_NEW_FEEDBACK\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I create and schedule a new feedback session?\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_NEW_FEEDBACK]\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    To create a new feedback session, click the \u003cb\u003eSessions\u003c/b\u003e tab at the top of the page. Then,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    fill out and submit the \u003cb\u003eAdd New Feedback Session\u003c/b\u003e form:"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cb\u003eChoose a session type\u003c/b\u003e. You can choose between creating a session with your own questions,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        creating a copy of a session you previously made, or using one of our session templates."},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cul\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003cli\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Session with your own questions: you\u0027ll start with an empty template to which you can add your own"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            questions"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003cli\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Session using template: TEAMMATES will provide you with a template of a typical session that you can"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            add to and customize to suit your needs"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003cli\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Copy from previous feedback sessions: you can reuse questions and settings from a survey you created"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            in the past"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/ul\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cb\u003eSelect the course ID\u003c/b\u003e of the course for which the session will be created."},{"lineNumber":79,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003cb\u003eGive your session a session name\u003c/b\u003e. This name will be visible to session respondents."},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cb\u003eSet the session\u0027s submission opening/closing time\u003c/b\u003e. This is the time period during which students"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        can submit responses. TEAMMATES will automatically open and close the session at times you specify."},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        (Optional) Set advanced options to best suit your needs:"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          Set a custom time zone"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"          Give students more specific instructions"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          Set a grace period during which students can still submit responses if the session closes"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          Choose when you want this session to be visible to students. After this time, students can see the questions,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          but they cannot submit their responses until the session is \u003ci\u003eopen\u003c/i\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          Choose when you want to make this session\u0027s responses visible. At this time, TEAMMATES will automatically"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          publish the results for students to view"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          Choose whether TEAMMATES should send reminder or announcement emails to students about this session"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          Make the session private. A private session is a session that is never visible to others."},{"lineNumber":113,"author":{"gitId":"-"},"content":"          This is for you to record your feedback about students. If you want to create a private session,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          set \"Make session visible\" to \u003ccode\u003eNever\u003c/code\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003cb\u003eClick Create Feedback Session\u003c/b\u003e!"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      This is the form used to set up sessions."},{"lineNumber":123,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_NEW_FEEDBACK]\" @collapseAnim\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                            [model]\u003d\"exampleSessionEditFormModel\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                            [courseCandidates]\u003d\"exampleCourseCandidates\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                            [templateSessions]\u003d\"exampleTemplateSessions\"\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c/tm-session-edit-form\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_QUESTIONS)\""},{"lineNumber":134,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_QUESTIONS\""},{"lineNumber":135,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I add questions to a session?\""},{"lineNumber":136,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_QUESTIONS]\"\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      After setting up a session, you can start adding questions.\u003cbr\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      You can also access this page by clicking the \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eEdit\u003c/button\u003e button of the desired session from the \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eSessions\u003c/b\u003e page."},{"lineNumber":140,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      To add a question:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Scroll to the bottom of the page."},{"lineNumber":147,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Select between adding a question from our predefined \u003ca (click)\u003d\"jumpTo(\u0027questions\u0027)\" [tmRouterLink]\u003d\"\"\u003equestion types\u003c/a\u003e or"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        copying a question from an existing feedback session."},{"lineNumber":151,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Save changes to the question when you have finished creating the question"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_QUESTIONS]\" @collapseAnim\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body background-color-light-blue text-center\"\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          \u003cdiv ngbDropdown class\u003d\"d-inline-block\"\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            \u003cbutton class\u003d\"btn btn-primary\" ngbDropdownToggle\u003eAdd New Question\u003c/button\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"dropdown-item\"\u003eChoose from template questions\u003c/button\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\"\u003e\u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e\u003c/button\u003e"},{"lineNumber":166,"author":{"gitId":"teikjun"},"content":"          \u003cbutton class\u003d\"btn btn-primary\"\u003eCopy Question\u003c/button\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      TEAMMATES gives you fine-grained control of each question. In addition to providing a range of different"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      \u003ca (click)\u003d\"jumpTo(\u0027questions\u0027)\" [tmRouterLink]\u003d\"\"\u003equestion types\u003c/a\u003e,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      you can also customize your desired:"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        \u003cb\u003eFeedback Path\u003c/b\u003e: define who is giving feedback, and who the feedback is about."},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Select a common feedback path from the dropdown menu, or choose \"Other predefined combinations...\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        to define the Feedback Giver and Recipient separately."},{"lineNumber":180,"author":{"gitId":"-"},"content":"        If you choose a ‘team’ as the giver, any member can submit the response on behalf of the team."},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003cb\u003eVisibility options\u003c/b\u003e: let students know who will be able to see their answers."},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Select a common visibility option from the dropdown menu, or choose \"Custom visibility options...\""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        to fully customize who can see the feedback response, the giver\u0027s identity, and the recipient\u0027s identity."},{"lineNumber":186,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      In the example question below, students will give feedback on their own team members."},{"lineNumber":190,"author":{"gitId":"-"},"content":"      The team member receiving feedback can see the feedback, but not who gave the feedback."},{"lineNumber":191,"author":{"gitId":"-"},"content":"      Instructors can see who received what feedback, and who gave the feedback."},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_QUESTIONS]\" @collapseAnim\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"background-color-light-green margin-top-15px padding-15px\"\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          \u003cb class\u003d\"feedback-path-title\"\u003eFeedback Path\u003c/b\u003e (Who is giving feedback about whom?)"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"true\"\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cspan\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"              Students in this course will give feedback on \u003ci class\u003d\"fas fa-arrow-right\"\u003e\u003c/i\u003e Giver\u0027s team members"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"margin-top-15px padding-15px background-color-light-green\"\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          \u003cb\u003eVisibility\u003c/b\u003e (Who can see the responses?)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"true\"\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            \u003cspan\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"              Shown anonymously to recipient and giver\u0027s team members, visible to instructor"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_PREVIEW)\""},{"lineNumber":222,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_PREVIEW\""},{"lineNumber":223,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I preview a session?\""},{"lineNumber":224,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_PREVIEW]\"\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      To see what the current session looks like to anyone in the course when they are submitting responses, use the \u003cb\u003ePreview\u003c/b\u003e feature.\u003cbr\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      You can quickly and easily confirm that the questions and their settings are correct after editing questions."},{"lineNumber":228,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      To access the preview panel of a specific session, click the \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eEdit\u003c/button\u003e button for that session in the \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eSessions\u003c/b\u003e page. The preview"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      panel is located at the bottom of the Edit Feedback Session page."},{"lineNumber":232,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_PREVIEW]\" @collapseAnim\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body background-color-light-blue text-center\"\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-2 text-right\"\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"              \u003cb\u003ePreview Session:\u003c/b\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-5\"\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control preview-select\"\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let student of exampleStudents\" [ngValue]\u003d\"student.email\"\u003e[{{ student.teamName }}] {{ student.name }}\u003c/option\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"true\" \u003ePreview as Student\u003c/button\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-5\" ngbTooltip\u003d\"View how this session would look like to an instructor who is submitting feedback. Only instructors with submit privileges are included in the list.\"\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control preview-select\"\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let instructor of exampleInstructors\" [ngValue]\u003d\"instructor.email\"\u003e{{ instructor.name }}\u003c/option\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"true\" \u003ePreview as Instructor\u003c/button\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(4, 7)\"\u003eManaging Session Responses\u003c/h4\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_CANNOT_SUBMIT)\""},{"lineNumber":262,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_CANNOT_SUBMIT\""},{"lineNumber":263,"author":{"gitId":"-"},"content":"                            headerText\u003d\"What should I do if a student says he/she cannot submit an evaluation due to a technical glitch?\""},{"lineNumber":264,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_CANNOT_SUBMIT]\"\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      Instructors can submit responses on behalf of a student. To do so:"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Ask the student to view the submission page and send you his/her answers to the session questions."},{"lineNumber":271,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.SESSION_VIEW_RESULTS); questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eView the results\u003c/a\u003e of the session."},{"lineNumber":274,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Scroll to the panel titled \u003cb\u003eParticipants who have not responded to any question\u003c/b\u003e. Click on the panel to expand it."},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Click the \u003cbutton type\u003d\"button\" class\u003d\"btn btn-sm btn-secondary\"\u003eSubmit Responses\u003c/button\u003e button of the corresponding student. You will be directed to a page where you can submit responses on behalf of the student."},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        Copy the student\u0027s responses to the corresponding questions, and click the \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-lg\"\u003eSubmit Feedback\u003c/button\u003e button."},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_VIEW_RESULTS)\""},{"lineNumber":288,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_VIEW_RESULTS\""},{"lineNumber":289,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view the results of my session?\""},{"lineNumber":290,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\"\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      View responses to a session by clicking the \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eResults\u003c/button\u003e button of a session in the \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      Click \u003cbutton class\u003d\"btn btn-primary btn-s\"\u003eEdit View\u003c/button\u003e to sort the results in an order that best suits you."},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003cp\u003e5 different views are available, each denoting the order in which responses are grouped."},{"lineNumber":296,"author":{"gitId":"-"},"content":"      Additionally, you can group the results by team, show or hide statistics, view missing responses and filter responses from a particular section."},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\" @collapseAnim\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body row\"\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"control-label\" ngbTooltip\u003d\"View results in different formats\"\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"              View:"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            \u003cdiv\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control\"\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.QUESTION\"\u003eGroup by - Question\u003c/option\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.GRQ\"\u003eGroup by - Giver \u003e Recipient \u003e Question\u003c/option\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.RGQ\"\u003eGroup by - Recipient \u003e Giver \u003e Question\u003c/option\u003e"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.GQR\"\u003eGroup by - Giver \u003e Question \u003e Recipient\u003c/option\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.RQG\"\u003eGroup by - Recipient \u003e Question \u003e Giver\u003c/option\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":315,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"control-label\" ngbTooltip\u003d\"View results by sections\"\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"              Section:"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            \u003cdiv\u003e"},{"lineNumber":320,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control\"\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003eAll\u003c/option\u003e"},{"lineNumber":322,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":324,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"control-label\" ngbTooltip\u003d\"Choose the way responses for the selected section is viewed\"\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"              If showing only a section:"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            \u003cdiv\u003e"},{"lineNumber":330,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control\"\u003e"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.EITHER\"\u003e"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                  Show response if either the giver or evaluee is in the selected section"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.GIVER\"\u003e"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                  Show response if the giver is in the selected section"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.EVALUEE\"\u003e"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                  Show response if the evaluee is in the selected section"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.BOTH\"\u003e"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                  Show response only if both are in the selected section"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":343,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":345,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":348,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"control-label\"\u003e"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            Additional settings:"},{"lineNumber":350,"author":{"gitId":"-"},"content":"          \u003c/label\u003e"},{"lineNumber":351,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            \u003cinput type\u003d\"checkbox\"\u003e Group by Teams"},{"lineNumber":353,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":354,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            \u003cinput type\u003d\"checkbox\"\u003e Show Statistics"},{"lineNumber":356,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            \u003cinput type\u003d\"checkbox\"\u003e Indicate Missing Responses"},{"lineNumber":359,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      In the example below, results are sorted by \u003cb\u003eGiver \u003e Recipient \u003e Question\u003c/b\u003e. Additionally, missing responses"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      have been recorded."},{"lineNumber":366,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\" @collapseAnim\u003e"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-grq-view [session]\u003d\"this.exampleFeedbackSession\""},{"lineNumber":369,"author":{"gitId":"-"},"content":"                                             [section]\u003d\"\u0027Section A\u0027\""},{"lineNumber":370,"author":{"gitId":"-"},"content":"                                             [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":371,"author":{"gitId":"-"},"content":"                                             [groupByTeam]\u003d\"true\""},{"lineNumber":372,"author":{"gitId":"-"},"content":"                                             [showStatistics]\u003d\"true\""},{"lineNumber":373,"author":{"gitId":"-"},"content":"                                             [indicateMissingResponses]\u003d\"true\""},{"lineNumber":374,"author":{"gitId":"-"},"content":"                                             [isExpandAll]\u003d\"true\""},{"lineNumber":375,"author":{"gitId":"-"},"content":"                                             [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\""},{"lineNumber":376,"author":{"gitId":"-"},"content":"                                             [responses]\u003d\"exampleGrqResponses\""},{"lineNumber":377,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-instructor-session-result-grq-view\u003e"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-no-response-panel [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":379,"author":{"gitId":"-"},"content":"                                               [section]\u003d\"\u0027Section A\u0027\""},{"lineNumber":380,"author":{"gitId":"-"},"content":"                                               [allStudents]\u003d\"exampleStudents\""},{"lineNumber":381,"author":{"gitId":"-"},"content":"                                               [noResponseStudents]\u003d\"exampleStudents\""},{"lineNumber":382,"author":{"gitId":"-"},"content":"                                               [isDisplayOnly]\u003d\"true\""},{"lineNumber":383,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-instructor-session-no-response-panel\u003e"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003cp\u003eIf you choose to publish the results of the session, students will receive an email with a link to access the"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      session\u0027s results. What they can see is governed by the visibility levels you set when setting up the session."},{"lineNumber":387,"author":{"gitId":"-"},"content":"      Here is an example of what a student might see:"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\" @collapseAnim\u003e"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card bg-light top-padded\" *ngFor\u003d\"let question of exampleQuestionsWithResponses\"\u003e"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body\" style\u003d\"padding: 20px;\"\u003e"},{"lineNumber":392,"author":{"gitId":"-"},"content":"          \u003ctm-question-text-with-info [questionNumber]\u003d\"question.feedbackQuestion.questionNumber\" [questionDetails]\u003d\"question.feedbackQuestion.questionDetails\" style\u003d\"font-size: 20px;\"\u003e\u003c/tm-question-text-with-info\u003e"},{"lineNumber":393,"author":{"gitId":"-"},"content":"          \u003ctm-single-statistics [question]\u003d\"question.feedbackQuestion.questionDetails\""},{"lineNumber":394,"author":{"gitId":"-"},"content":"                                [responses]\u003d\"question.responsesToSelf\""},{"lineNumber":395,"author":{"gitId":"-"},"content":"                                [statistics]\u003d\"question.questionStatistics\""},{"lineNumber":396,"author":{"gitId":"-"},"content":"                                [isStudent]\u003d\"true\"\u003e\u003c/tm-single-statistics\u003e"},{"lineNumber":397,"author":{"gitId":"-"},"content":"          \u003ctm-student-view-responses *ngIf\u003d\"question.responsesToSelf.length\" [responses]\u003d\"question.responsesToSelf\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"exampleFeedbackSession.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":398,"author":{"gitId":"-"},"content":"          \u003cdiv *ngFor\u003d\"let responsesForOtherRecipient of question.otherResponses\"\u003e"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            \u003ctm-student-view-responses *ngIf\u003d\"responsesForOtherRecipient.length\" [responses]\u003d\"responsesForOtherRecipient\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"exampleFeedbackSession.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":400,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":401,"author":{"gitId":"-"},"content":"          \u003cdiv *ngIf\u003d\"question.responsesFromSelf.length\" style\u003d\"margin-top: 10px;\"\u003e"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            \u003cstrong\u003eYour own responses (to others):\u003c/strong\u003e"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            \u003cdiv *ngFor\u003d\"let responseFromSelf of question.responsesFromSelf\"\u003e"},{"lineNumber":404,"author":{"gitId":"-"},"content":"              \u003ctm-student-view-responses [responses]\u003d\"[responseFromSelf]\" [isSelfResponses]\u003d\"true\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"exampleFeedbackSession.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":406,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":411,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.VIEW_ALL_RESPONSES)\""},{"lineNumber":413,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.VIEW_ALL_RESPONSES\""},{"lineNumber":414,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view all the responses a student has given and received?\""},{"lineNumber":415,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.VIEW_ALL_RESPONSES]\"\u003e"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      To view the responses that Student A from Course B has given and received:"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":422,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        Click \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eAll Records\u003c/button\u003e button corresponding to Student A to access all the responses Student A has given and received."},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(7, 10)\"\u003eAdding Comments to Responses\u003c/h4\u003e"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_ADD_COMMENTS)\""},{"lineNumber":433,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_ADD_COMMENTS\""},{"lineNumber":434,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I create a comment on a response?\""},{"lineNumber":435,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_ADD_COMMENTS]\"\u003e"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      While \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.SESSION_VIEW_RESULTS); questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eviewing the results\u003c/a\u003e of a session, you can add comments to respondents\u0027 answers."},{"lineNumber":438,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      To create comments on a response in a session:"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        View the results of a session"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        Click \u003cbutton class\u003d\"btn btn-light btn-s dropdown-toggle\"\u003eView\u003c/button\u003e dropdown and change the view type to \u003cb\u003eGroup by - Giver \u0026gt; Recipient \u0026gt; Question\u003c/b\u003e or \u003cb\u003eGroup by - Recipient \u0026gt; Giver \u0026gt; Question\u003c/b\u003e"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        Click the \u003cbutton type\u003d\"button\" class\u003d\"btn btn-secondary btn-sm\"\u003e\u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e\u0026nbsp;\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e\u003c/button\u003e icon on the right-hand side of the response you would like to comment on"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        Fill in the form, which will appear similar to the example below"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_ADD_COMMENTS]\" @collapseAnim\u003e"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        \u003ctm-comment-edit-form"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                [mode]\u003d\"CommentRowMode.ADD\""},{"lineNumber":460,"author":{"gitId":"-"},"content":"                [model]\u003d\"exampleCommentEditFormModel\""},{"lineNumber":461,"author":{"gitId":"-"},"content":"                [isFeedbackParticipantComment]\u003d\"false\""},{"lineNumber":462,"author":{"gitId":"-"},"content":"                [response]\u003d\"exampleResponse\""},{"lineNumber":463,"author":{"gitId":"-"},"content":"                [questionShowResponsesTo]\u003d\"[]\""},{"lineNumber":464,"author":{"gitId":"-"},"content":"                [isDisabled]\u003d\"false\""},{"lineNumber":465,"author":{"gitId":"-"},"content":"                [shouldHideSavingButton]\u003d\"false\""},{"lineNumber":466,"author":{"gitId":"-"},"content":"                [shouldHideClosingButton]\u003d\"false\""},{"lineNumber":467,"author":{"gitId":"-"},"content":"                [isVisibilityOptionEnabled]\u003d\"true\"\u003e"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        \u003c/tm-comment-edit-form\u003e"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":473,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.EDIT_DEL_COMMENT)\""},{"lineNumber":474,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.EDIT_DEL_COMMENT\""},{"lineNumber":475,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I edit or delete a comment on a response?\""},{"lineNumber":476,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.EDIT_DEL_COMMENT]\"\u003e"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      To edit or delete a comment that you previously made on a response:"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        Navigate to the page where you \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.SESSION_ADD_COMMENTS); questionsToCollapsed[SessionsSectionQuestions.SESSION_ADD_COMMENTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eadded the comment\u003c/a\u003e that you want to edit or delete."},{"lineNumber":483,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        Hover over the comment which you want to edit or delete."},{"lineNumber":486,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        Click the \u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e icon to edit the comment, or"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"far fa-trash-alt\"\u003e\u003c/i\u003e icon to delete the comment. The icons are visible on the right-hand side of the comment field."},{"lineNumber":490,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        If you are editing the comment, make your edits and click \u003cbutton class\u003d\"btn btn-primary btn-s\"\u003eSave\u003c/button\u003e to save changes."},{"lineNumber":493,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        If you are deleting the comment, click \u003cb\u003eOK\u003c/b\u003e to confirm that you want to delete the comment."},{"lineNumber":496,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":498,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_SEARCH)\""},{"lineNumber":501,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_SEARCH\""},{"lineNumber":502,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I search for a feedback session question, response or comment on a response?\""},{"lineNumber":503,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_SEARCH]\"\u003e"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    You can search for questions, responses to a question and comments on responses in any of your courses. To do so:"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eSearch\u003c/b\u003e page using the top navigation bar."},{"lineNumber":508,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        Tick the option \u003cb\u003eQuestions, responses, comments on responses\u003c/b\u003e below the search bar."},{"lineNumber":511,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        Type in the keywords of your search."},{"lineNumber":514,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        Click \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSearch\u003c/button\u003e."},{"lineNumber":517,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      Assuming the relevant data exists, the results for a search with the keyword \u003ccode\u003egood\u003c/code\u003e would look something similar to this:"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      \u003ctm-comment-result-table [commentTables]\u003d\"exampleCommentSearchResult\"\u003e\u003c/tm-comment-result-table\u003e"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":525,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":528,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(10, 14)\"\u003eRestoring Deleted Sessions\u003c/h4\u003e"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":530,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.VIEW_DELETED_SESSION)\""},{"lineNumber":531,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.VIEW_DELETED_SESSION\""},{"lineNumber":532,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view sessions I have deleted?\""},{"lineNumber":533,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION]\"\u003e"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      You can view all your deleted feedback sessions by navigating to the \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      Scroll to the \u003cb\u003eDeleted feedback sessions\u003c/b\u003e heading, which looks similar to this:"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION]\" @collapseAnim\u003e"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":540,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":541,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"false\"\u003e"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      The feedback sessions you have previously deleted are listed here."},{"lineNumber":546,"author":{"gitId":"-"},"content":"      In order to access information in a deleted session, \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.RESTORE_SESSION); questionsToCollapsed[SessionsSectionQuestions.RESTORE_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003erestore the session\u003c/a\u003e."},{"lineNumber":547,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.RESTORE_SESSION)\""},{"lineNumber":551,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.RESTORE_SESSION\""},{"lineNumber":552,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I restore a deleted session?\""},{"lineNumber":553,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_SESSION]\"\u003e"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      To restore a deleted feedback session, first \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.VIEW_DELETED_SESSION); questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the session\u003c/a\u003e that you would like to restore in the \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eRestore\u003c/button\u003e button corresponding to the session you want to restore."},{"lineNumber":557,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_SESSION]\" @collapseAnim\u003e"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":560,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":561,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"true\"\u003e"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      After restoring the session, all the information relevant to the session (e.g. questions, responses, comments) will also be restored."},{"lineNumber":566,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":567,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":568,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":569,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.PERMANENT_DEL_SESSION)\""},{"lineNumber":570,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.PERMANENT_DEL_SESSION\""},{"lineNumber":571,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I permanently delete a session?\""},{"lineNumber":572,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.PERMANENT_DEL_SESSION]\"\u003e"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      To permanently delete a feedback session, first \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.VIEW_DELETED_SESSION); questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the session\u003c/a\u003e that you would like to permanently delete in the \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-sm btn-danger\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e button corresponding to the session you want to delete."},{"lineNumber":576,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.PERMANENT_DEL_SESSION]\" @collapseAnim\u003e"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":579,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":580,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"true\"\u003e"},{"lineNumber":581,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      After deleting the session, all the information relevant to the session (e.g. questions, responses, comments) will also be permanently deleted."},{"lineNumber":585,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":586,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":587,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":588,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.RESTORE_DEL_ALL)\""},{"lineNumber":589,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.RESTORE_DEL_ALL\""},{"lineNumber":590,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I restore/delete all sessions from Recycle Bin?\""},{"lineNumber":591,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_DEL_ALL]\"\u003e"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      First \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.VIEW_DELETED_SESSION); questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the session\u003c/a\u003e and check for sessions in Recycle Bin.\u003cbr\u003e"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      To restore all sessions, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-sm btn-secondary\"\u003e\u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e\u003cstrong\u003e Restore All\u003c/strong\u003e\u003c/button\u003e button in \u003cb\u003eDeleted feedback sessions\u003c/b\u003e heading;"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      to delete all sessions, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-sm btn-danger\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e\u003cstrong\u003e Delete All\u003c/strong\u003e\u003c/button\u003e button in \u003cb\u003eDeleted feedback sessions\u003c/b\u003e heading."},{"lineNumber":596,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_DEL_ALL]\" @collapseAnim\u003e"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":599,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":600,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"false\"\u003e"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":603,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":604,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"teikjun":1,"-":603}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ChangeDetectorRef, Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { concatMap, finalize, flatMap, map, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  CommonVisibilitySetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestionsService,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  NewQuestionModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { LOCAL_DATE_TIME_FORMAT, TimeResolvingResult, TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, FeedbackVisibilityType,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  HasResponses,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  QuestionEditFormMode,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  QuestionEditFormModel,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  DateFormat,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  SessionEditFormMode,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  SessionEditFormModel,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  TimeFormat,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { QuestionToCopyCandidate } from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { CopyQuestionsFromOtherSessionsModalComponent } from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":65,"author":{"gitId":"-"},"content":" * Instructor feedback session edit page."},{"lineNumber":66,"author":{"gitId":"-"},"content":" */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-edit-page\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"},{"lineNumber":71,"author":{"gitId":"-"},"content":"})"},{"lineNumber":72,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  // url param"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  isEditingMode: boolean \u003d false;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  courseName: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  // models"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  sessionEditFormModel: SessionEditFormModel \u003d {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 23, minute: 59 },"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 23, minute: 59 },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  // to get the original session model on discard changes"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  feedbackSessionModelBeforeEditing: SessionEditFormModel \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"  // to get the original question model"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  questionEditFormModels: QuestionEditFormModel[] \u003d [];"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"  newQuestionEditFormModel: QuestionEditFormModel \u003d {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  isAddingQuestionPanelExpanded: boolean \u003d false;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  isLoadingFeedbackSession: boolean \u003d false;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackSessionFailed: boolean \u003d false;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  isLoadingFeedbackQuestions: boolean \u003d false;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackQuestionsFailed: boolean \u003d false;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  isCopyingQuestion: boolean \u003d false;"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  // all students of the course"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  studentsOfCourse: Student[] \u003d [];"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  emailOfStudentToPreview: string \u003d \u0027\u0027;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  // instructors which can be previewed as"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  instructorsCanBePreviewedAs: Instructor[] \u003d [];"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  emailOfInstructorToPreview: string \u003d \u0027\u0027;"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"  get isAllCollapsed(): boolean {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return this.questionEditFormModels.some((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      return model.isCollapsed;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"  constructor(router: Router,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"              instructorService: InstructorService,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"              ngbModal: NgbModal,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              private changeDetectorRef: ChangeDetectorRef) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService, ngbModal);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      this.isEditingMode \u003d queryParams.editingMode \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"      this.loadFeedbackSession();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestions();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      this.getAllStudentsOfCourse();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      this.getAllInstructorsCanBePreviewedAs();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   * Loads a feedback session."},{"lineNumber":215,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackSessionFailed \u003d false;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackSession \u003d true;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    // load the course of the feedback session first"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    this.courseService.getCourseAsInstructor(this.courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      this.courseName \u003d course.courseName;"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        courseId: this.courseId,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      }).pipe(finalize(() \u003d\u003e this.isLoadingFeedbackSession \u003d false))"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession, this.isEditingMode);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        this.feedbackSessionModelBeforeEditing \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":244,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  copyCurrentSession(): void {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    // load course candidates first"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.courseCandidates \u003d courses.courses;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"      modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        this.failedToCopySessions \u003d {};"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromModal("},{"lineNumber":257,"author":{"gitId":"-"},"content":"            result, this.courseId, this.feedbackSessionName);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"          this.copySingleSession(requestList[0]);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (requestList.length \u003e 1) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"          forkJoin(requestList).subscribe(() \u003d\u003e {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            this.showCopyStatusMessage();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); })"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      .catch(() \u003d\u003e {});"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."},{"lineNumber":273,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  getSessionEditFormModel(feedbackSession: FeedbackSession, isEditable: boolean \u003d false): SessionEditFormModel {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    const submissionStart: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone);"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"    const submissionEnd: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone);"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    const model: SessionEditFormModel \u003d {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      isEditable,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      courseId: feedbackSession.courseId,"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      timeZone: feedbackSession.timeZone,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      courseName: this.courseName,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      instructions: feedbackSession.instructions,"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"      submissionStartTime: submissionStart.time,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      submissionStartDate: submissionStart.date,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      submissionEndTime: submissionEnd.time,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      submissionEndDate: submissionEnd.date,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      gracePeriod: feedbackSession.gracePeriod,"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"      responseVisibleSetting: feedbackSession.responseVisibleSetting,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"      submissionStatus: feedbackSession.submissionStatus,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      publishStatus: feedbackSession.publishStatus,"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"      templateSessionName: \u0027\u0027,"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"},{"lineNumber":313,"author":{"gitId":"-"},"content":"          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"    if (feedbackSession.customSessionVisibleTimestamp) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      const customSessionVisible: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":319,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp, feedbackSession.timeZone);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      model.customSessionVisibleTime \u003d customSessionVisible.time;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      model.customSessionVisibleDate \u003d customSessionVisible.date;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    if (feedbackSession.customResponseVisibleTimestamp) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      const customResponseVisible: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp, feedbackSession.timeZone);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      model.customResponseVisibleTime \u003d customResponseVisible.time;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      model.customResponseVisibleDate \u003d customResponseVisible.date;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    return model;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":335,"author":{"gitId":"-"},"content":"   * Get the local date and time of timezone from timestamp."},{"lineNumber":336,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  private getDateTimeAtTimezone(timestamp: number, timeZone: string): {date: DateFormat; time: TimeFormat} {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    const momentInstance: any \u003d this.timezoneService.getMomentInstance(timestamp, timeZone);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    const date: DateFormat \u003d {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      year: momentInstance.year(),"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      month: momentInstance.month() + 1, // moment return 0-11 for month"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      day: momentInstance.date(),"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    const time: TimeFormat \u003d {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      minute: momentInstance.minute(),"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      hour: momentInstance.hour(),"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      date,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      time,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":355,"author":{"gitId":"-"},"content":"   * Handles editing existing session event."},{"lineNumber":356,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":357,"author":{"gitId":"-"},"content":"  editExistingSessionHandler(): void {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isEditable \u003d false;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    this.feedbackSessionModelBeforeEditing \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isSaving \u003d true;"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":363,"author":{"gitId":"-"},"content":"      this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":365,"author":{"gitId":"-"},"content":"          \u0027Submission opening time\u0027),"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"          \u0027Submission closing time\u0027),"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"},{"lineNumber":370,"author":{"gitId":"-"},"content":"          this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":372,"author":{"gitId":"-"},"content":"              \u0027Session visible time\u0027)"},{"lineNumber":373,"author":{"gitId":"-"},"content":"          : of(0),"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"},{"lineNumber":375,"author":{"gitId":"-"},"content":"          this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"              \u0027Response visible time\u0027)"},{"lineNumber":378,"author":{"gitId":"-"},"content":"          : of(0),"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":380,"author":{"gitId":"-"},"content":"        switchMap((vals: number[]) \u003d\u003e {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"          return this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            instructions: this.sessionEditFormModel.instructions,"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: vals[0],"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            submissionEndTimestamp: vals[1],"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            gracePeriod: this.sessionEditFormModel.gracePeriod,"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            customSessionVisibleTimestamp: vals[2],"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            customResponseVisibleTimestamp: vals[3],"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027The feedback session has been updated.\u0027);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":408,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":411,"author":{"gitId":"-"},"content":"   * Handles canceling existing session event without saving changes."},{"lineNumber":412,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  cancelEditingSessionHandler(): void {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel \u003d JSON.parse(JSON.stringify(this.feedbackSessionModelBeforeEditing));"},{"lineNumber":415,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   * Resolves the local date time to an UNIX timestamp."},{"lineNumber":419,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  private resolveLocalDateTime("},{"lineNumber":421,"author":{"gitId":"-"},"content":"      date: DateFormat, time: TimeFormat, timeZone: string, fieldName: string): Observable\u003cnumber\u003e {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    const inst: any \u003d moment();"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    inst.set(\u0027hour\u0027, time.hour);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    inst.set(\u0027minute\u0027, time.minute);"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("},{"lineNumber":431,"author":{"gitId":"-"},"content":"        tap((result: TimeResolvingResult) \u003d\u003e {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"          if (result.message.length !\u003d\u003d 0) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            this.statusMessageService.showWarningToast(result.message);"},{"lineNumber":434,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   * Handles deleting current feedback session."},{"lineNumber":441,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  deleteExistingSessionHandler(): void {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin(this.courseId, this.feedbackSessionName).subscribe(() \u003d\u003e {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions\u0027,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"          \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":449,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   * Loads feedback questions."},{"lineNumber":453,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":454,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    this.questionEditFormModels \u003d [];"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackQuestionsFailed \u003d false;"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackQuestions \u003d true;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isLoadingFeedbackQuestions \u003d false))"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"            const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.push(addedQuestionEditFormModel);"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"          this.hasLoadingFeedbackQuestionsFailed \u003d true;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":475,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   * Tracks the question edit form by feedback question id."},{"lineNumber":479,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":481,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":484,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   * Converts feedback question to the question edit form model."},{"lineNumber":488,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"      questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"      questionType: feedbackQuestion.questionType,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"      giverType: feedbackQuestion.giverType,"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      recipientType: feedbackQuestion.recipientType,"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":507,"author":{"gitId":"-"},"content":"          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"      showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"      isEditable: false,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   * Loads the isQuestionHasResponses value for a question edit for model."},{"lineNumber":525,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":526,"author":{"gitId":"-"},"content":"  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        .subscribe((resp: HasResponses) \u003d\u003e {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"          model.isQuestionHasResponses \u003d resp.hasResponses;"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":531,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":534,"author":{"gitId":"-"},"content":"   * Saves the existing question."},{"lineNumber":535,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  saveExistingQuestionHandler(index: number): void {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    const originalQuestionNumber: number \u003d"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"      questionNumber: questionEditFormModel.questionNumber,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":562,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        .subscribe((updatedQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"},{"lineNumber":568,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"          this.loadResponseStatusForQuestion(this.questionEditFormModels[index]);"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"          // shift question if needed"},{"lineNumber":572,"author":{"gitId":"-"},"content":"          if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"            // move question form"},{"lineNumber":574,"author":{"gitId":"-"},"content":"            this.moveQuestionForm("},{"lineNumber":575,"author":{"gitId":"-"},"content":"                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"},{"lineNumber":576,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":577,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The changes to the question have been updated.\u0027);"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":581,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   * Moves question edit form from the original position to the new position."},{"lineNumber":585,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":586,"author":{"gitId":"-"},"content":"  private moveQuestionForm(originalPosition: number, newPosition: number): void {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.splice(newPosition, 0,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.splice(originalPosition, 1)[0]);"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    const start: number \u003d Math.min(originalPosition, newPosition);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    const movedExpandedQuestions: QuestionEditFormModel[] \u003d this.questionEditFormModels"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      .slice(start, newPosition + 1)"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      .filter((model: QuestionEditFormModel) \u003d\u003e !model.isCollapsed);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e model.isCollapsed \u003d true);"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    this.changeDetectorRef.detectChanges();"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e model.isCollapsed \u003d false);"},{"lineNumber":598,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":599,"author":{"gitId":"-"},"content":""},{"lineNumber":600,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."},{"lineNumber":602,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":603,"author":{"gitId":"-"},"content":"  private normalizeQuestionNumberInQuestionForms(): void {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"},{"lineNumber":606,"author":{"gitId":"-"},"content":"      questionEditFormModel.questionNumber \u003d i;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":610,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":611,"author":{"gitId":"-"},"content":""},{"lineNumber":612,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":613,"author":{"gitId":"-"},"content":"   * Discards the changes made to the existing question."},{"lineNumber":614,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":615,"author":{"gitId":"-"},"content":"  discardExistingQuestionHandler(index: number): void {"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    const feedbackQuestion: FeedbackQuestion \u003d"},{"lineNumber":618,"author":{"gitId":"-"},"content":"        // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":624,"author":{"gitId":"-"},"content":"   * Duplicates the question."},{"lineNumber":625,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":626,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(index: number): void {"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"},{"lineNumber":632,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":646,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":649,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":655,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":656,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been duplicated below.\u0027);"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":658,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":659,"author":{"gitId":"-"},"content":""},{"lineNumber":660,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":661,"author":{"gitId":"-"},"content":"   * Deletes the existing question."},{"lineNumber":662,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":663,"author":{"gitId":"-"},"content":"  deleteExistingQuestionHandler(index: number): void {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        .openConfirmationModal(\u0027Delete the question?\u0027, SimpleModalType.DANGER,"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            \u0027Warning: Deleted question cannot be recovered. \u003cb\u003eAll existing responses for this question to be deleted.\u003c/b\u003e\u0027);"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":669,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.deleteFeedbackQuestion(questionEditFormModel.feedbackQuestionId).subscribe("},{"lineNumber":670,"author":{"gitId":"-"},"content":"          () \u003d\u003e {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"            // remove form model"},{"lineNumber":672,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"},{"lineNumber":673,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.splice(index, 1);"},{"lineNumber":674,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The question has been deleted.\u0027);"},{"lineNumber":677,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":679,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":682,"author":{"gitId":"-"},"content":"   * Handles display of template question modal."},{"lineNumber":683,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":684,"author":{"gitId":"-"},"content":"  templateQuestionModalHandler(): void {"},{"lineNumber":685,"author":{"gitId":"halfwhole"},"content":"    const windowClass: string \u003d \u0027modal-large\u0027;"},{"lineNumber":686,"author":{"gitId":"halfwhole"},"content":"    this.ngbModal.open(TemplateQuestionModalComponent, { windowClass }).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      of(...questions).pipe("},{"lineNumber":689,"author":{"gitId":"-"},"content":"          concatMap((question: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"            questionNumber +\u003d 1;"},{"lineNumber":691,"author":{"gitId":"-"},"content":"            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"              questionNumber,"},{"lineNumber":693,"author":{"gitId":"-"},"content":"              questionBrief: question.questionBrief,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"              questionDescription: question.questionDescription,"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"              questionDetails: question.questionDetails,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"              questionType: question.questionType,"},{"lineNumber":698,"author":{"gitId":"-"},"content":""},{"lineNumber":699,"author":{"gitId":"-"},"content":"              giverType: question.giverType,"},{"lineNumber":700,"author":{"gitId":"-"},"content":"              recipientType: question.recipientType,"},{"lineNumber":701,"author":{"gitId":"-"},"content":""},{"lineNumber":702,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":703,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"              showResponsesTo: question.showResponsesTo,"},{"lineNumber":706,"author":{"gitId":"-"},"content":"              showGiverNameTo: question.showGiverNameTo,"},{"lineNumber":707,"author":{"gitId":"-"},"content":"              showRecipientNameTo: question.showRecipientNameTo,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":709,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        if (questions.length \u003d\u003d\u003d 1) {"},{"lineNumber":715,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The questions have been added to this feedback session.\u0027);"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":720,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":721,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":722,"author":{"gitId":"-"},"content":""},{"lineNumber":723,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":724,"author":{"gitId":"-"},"content":"   * Populates and shows new question edit form."},{"lineNumber":725,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":726,"author":{"gitId":"-"},"content":"  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    this.isAddingQuestionPanelExpanded \u003d true;"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"-"},"content":"    const newQuestionModel: NewQuestionModel \u003d"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewQuestionModel(type);"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel \u003d {"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      feedbackQuestionId: \u0027\u0027,"},{"lineNumber":734,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1,"},{"lineNumber":735,"author":{"gitId":"-"},"content":"      questionBrief: newQuestionModel.questionBrief,"},{"lineNumber":736,"author":{"gitId":"-"},"content":"      questionDescription: newQuestionModel.questionDescription,"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"      questionType: newQuestionModel.questionType,"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      questionDetails: newQuestionModel.questionDetails,"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"      giverType: newQuestionModel.giverType,"},{"lineNumber":744,"author":{"gitId":"-"},"content":"      recipientType: newQuestionModel.recipientType,"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":747,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":748,"author":{"gitId":"-"},"content":"          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"      showResponsesTo: newQuestionModel.showResponsesTo,"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      showGiverNameTo: newQuestionModel.showGiverNameTo,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"      isEditable: true,"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":756,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":757,"author":{"gitId":"-"},"content":""},{"lineNumber":758,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":759,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"    // inherit some settings from the last question"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    if (this.questionEditFormModels.length \u003e 0) {"},{"lineNumber":765,"author":{"gitId":"-"},"content":"      const lastQuestionEditFormModel: QuestionEditFormModel \u003d"},{"lineNumber":766,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[this.questionEditFormModels.length - 1];"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"      const newQuestionAllowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d"},{"lineNumber":769,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getAllowedFeedbackPaths(type);"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      // inherit feedback path if applicable"},{"lineNumber":771,"author":{"gitId":"-"},"content":"      if (newQuestionAllowedFeedbackPaths.has(lastQuestionEditFormModel.giverType)"},{"lineNumber":772,"author":{"gitId":"-"},"content":"          // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":773,"author":{"gitId":"-"},"content":"          \u0026\u0026 newQuestionAllowedFeedbackPaths.get(lastQuestionEditFormModel.giverType)!"},{"lineNumber":774,"author":{"gitId":"-"},"content":"              .indexOf(lastQuestionEditFormModel.recipientType) !\u003d\u003d -1) {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.giverType \u003d lastQuestionEditFormModel.giverType;"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.recipientType \u003d lastQuestionEditFormModel.recipientType;"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"      const newQuestionVisibilityStateMachine: VisibilityStateMachine \u003d"},{"lineNumber":780,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":781,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.giverType, this.newQuestionEditFormModel.recipientType);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"      // inherit visibility settings if applicable, the state machine will automatically filter out invalid choices"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      newQuestionVisibilityStateMachine.applyVisibilitySettings({"},{"lineNumber":784,"author":{"gitId":"-"},"content":"        SHOW_RESPONSE: lastQuestionEditFormModel.showResponsesTo,"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        SHOW_GIVER_NAME: lastQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        SHOW_RECIPIENT_NAME: lastQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":787,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":788,"author":{"gitId":"-"},"content":"      const newQuestionShowResponsesTo: FeedbackVisibilityType[]  \u003d"},{"lineNumber":789,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RESPONSE);"},{"lineNumber":790,"author":{"gitId":"-"},"content":"      const newQuestionShowGiverNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":791,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_GIVER_NAME);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"      const newQuestionShowRecipientNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":793,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine"},{"lineNumber":794,"author":{"gitId":"-"},"content":"              .getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RECIPIENT_NAME);"},{"lineNumber":795,"author":{"gitId":"-"},"content":""},{"lineNumber":796,"author":{"gitId":"-"},"content":"      let isAllowedToUseInheritedVisibility: boolean \u003d false;"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      if (this.feedbackQuestionsService"},{"lineNumber":798,"author":{"gitId":"-"},"content":"          .isCustomFeedbackVisibilitySettingAllowed(this.newQuestionEditFormModel.questionType)) {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":800,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":801,"author":{"gitId":"-"},"content":"        const commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d"},{"lineNumber":802,"author":{"gitId":"-"},"content":"            this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":803,"author":{"gitId":"-"},"content":"                newQuestionVisibilityStateMachine, this.newQuestionEditFormModel.questionType);"},{"lineNumber":804,"author":{"gitId":"-"},"content":"        // new question is only allowed to have common visibility settings"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        // check whether the inherited settings fall into that or not"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        for (const commonVisibilityOption of commonFeedbackVisibilitySettings) {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"          if (this.isSameSet(newQuestionShowResponsesTo, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":808,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowGiverNameTo,"},{"lineNumber":809,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":810,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowRecipientNameTo,"},{"lineNumber":811,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":812,"author":{"gitId":"-"},"content":"            isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":813,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":816,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"      if (isAllowedToUseInheritedVisibility) {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showResponsesTo \u003d newQuestionShowResponsesTo;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showGiverNameTo \u003d newQuestionShowGiverNameTo;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showRecipientNameTo \u003d newQuestionShowRecipientNameTo;"},{"lineNumber":822,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"    this.scrollToNewEditForm();"},{"lineNumber":826,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":829,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":830,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":831,"author":{"gitId":"-"},"content":""},{"lineNumber":832,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":833,"author":{"gitId":"-"},"content":"   * Creates a new question."},{"lineNumber":834,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":835,"author":{"gitId":"-"},"content":"  createNewQuestionHandler(): void {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel.isSaving \u003d true;"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      questionNumber: this.newQuestionEditFormModel.questionNumber,"},{"lineNumber":839,"author":{"gitId":"-"},"content":"      questionBrief: this.newQuestionEditFormModel.questionBrief,"},{"lineNumber":840,"author":{"gitId":"-"},"content":"      questionDescription: this.newQuestionEditFormModel.questionDescription,"},{"lineNumber":841,"author":{"gitId":"-"},"content":""},{"lineNumber":842,"author":{"gitId":"-"},"content":"      questionDetails: this.newQuestionEditFormModel.questionDetails,"},{"lineNumber":843,"author":{"gitId":"-"},"content":"      questionType: this.newQuestionEditFormModel.questionType,"},{"lineNumber":844,"author":{"gitId":"-"},"content":""},{"lineNumber":845,"author":{"gitId":"-"},"content":"      giverType: this.newQuestionEditFormModel.giverType,"},{"lineNumber":846,"author":{"gitId":"-"},"content":"      recipientType: this.newQuestionEditFormModel.recipientType,"},{"lineNumber":847,"author":{"gitId":"-"},"content":""},{"lineNumber":848,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":849,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":850,"author":{"gitId":"-"},"content":""},{"lineNumber":851,"author":{"gitId":"-"},"content":"      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"},{"lineNumber":852,"author":{"gitId":"-"},"content":"      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":853,"author":{"gitId":"-"},"content":"      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":856,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":857,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.isSaving \u003d false;"},{"lineNumber":858,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":860,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":862,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":863,"author":{"gitId":"-"},"content":""},{"lineNumber":864,"author":{"gitId":"-"},"content":"          this.moveQuestionForm("},{"lineNumber":865,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"},{"lineNumber":866,"author":{"gitId":"-"},"content":"          this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":867,"author":{"gitId":"-"},"content":"          this.isAddingQuestionPanelExpanded \u003d false;"},{"lineNumber":868,"author":{"gitId":"-"},"content":""},{"lineNumber":869,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":870,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":871,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":874,"author":{"gitId":"-"},"content":"   * Handles \u0027Copy Question\u0027 click event."},{"lineNumber":875,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":876,"author":{"gitId":"-"},"content":"  copyQuestionsFromOtherSessionsHandler(): void {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    this.isCopyingQuestion \u003d true;"},{"lineNumber":878,"author":{"gitId":"-"},"content":"    const questionToCopyCandidates: QuestionToCopyCandidate[] \u003d [];"},{"lineNumber":879,"author":{"gitId":"-"},"content":""},{"lineNumber":880,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("},{"lineNumber":881,"author":{"gitId":"-"},"content":"        switchMap((sessions: FeedbackSessions) \u003d\u003e of(...sessions.feedbackSessions)),"},{"lineNumber":882,"author":{"gitId":"-"},"content":"        flatMap((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"          return this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":884,"author":{"gitId":"-"},"content":"            courseId: session.courseId,"},{"lineNumber":885,"author":{"gitId":"-"},"content":"            feedbackSessionName: session.feedbackSessionName,"},{"lineNumber":886,"author":{"gitId":"-"},"content":"            intent: Intent.FULL_DETAIL,"},{"lineNumber":887,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":888,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":889,"author":{"gitId":"-"},"content":"              .pipe("},{"lineNumber":890,"author":{"gitId":"-"},"content":"                  map((questions: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"                    return questions.questions.map((q: FeedbackQuestion) \u003d\u003e ({"},{"lineNumber":892,"author":{"gitId":"-"},"content":"                      courseId: session.courseId,"},{"lineNumber":893,"author":{"gitId":"-"},"content":"                      feedbackSessionName: session.feedbackSessionName,"},{"lineNumber":894,"author":{"gitId":"-"},"content":"                      question: q,"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"                      isSelected: false,"},{"lineNumber":897,"author":{"gitId":"-"},"content":"                    } as QuestionToCopyCandidate));"},{"lineNumber":898,"author":{"gitId":"-"},"content":"                  }),"},{"lineNumber":899,"author":{"gitId":"-"},"content":"              );"},{"lineNumber":900,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e this.isCopyingQuestion \u003d false),"},{"lineNumber":902,"author":{"gitId":"-"},"content":"    ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) \u003d\u003e {"},{"lineNumber":903,"author":{"gitId":"-"},"content":"      questionToCopyCandidates.push(...questionToCopyCandidate);"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"      const ref: NgbModalRef \u003d this.ngbModal.open(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":906,"author":{"gitId":"-"},"content":"      ref.componentInstance.questionToCopyCandidates \u003d questionToCopyCandidates;"},{"lineNumber":907,"author":{"gitId":"-"},"content":""},{"lineNumber":908,"author":{"gitId":"-"},"content":"      ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":909,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d true;"},{"lineNumber":910,"author":{"gitId":"-"},"content":"        of(...questionsToCopy).pipe("},{"lineNumber":911,"author":{"gitId":"-"},"content":"            concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":912,"author":{"gitId":"-"},"content":"              return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":913,"author":{"gitId":"-"},"content":"                questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"},{"lineNumber":914,"author":{"gitId":"-"},"content":"                questionBrief: questionToCopy.questionBrief,"},{"lineNumber":915,"author":{"gitId":"-"},"content":"                questionDescription: questionToCopy.questionDescription,"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"                questionDetails: questionToCopy.questionDetails,"},{"lineNumber":918,"author":{"gitId":"-"},"content":"                questionType: questionToCopy.questionType,"},{"lineNumber":919,"author":{"gitId":"-"},"content":""},{"lineNumber":920,"author":{"gitId":"-"},"content":"                giverType: questionToCopy.giverType,"},{"lineNumber":921,"author":{"gitId":"-"},"content":"                recipientType: questionToCopy.recipientType,"},{"lineNumber":922,"author":{"gitId":"-"},"content":""},{"lineNumber":923,"author":{"gitId":"-"},"content":"                numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":924,"author":{"gitId":"-"},"content":"                customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"                showResponsesTo: questionToCopy.showResponsesTo,"},{"lineNumber":927,"author":{"gitId":"-"},"content":"                showGiverNameTo: questionToCopy.showGiverNameTo,"},{"lineNumber":928,"author":{"gitId":"-"},"content":"                showRecipientNameTo: questionToCopy.showRecipientNameTo,"},{"lineNumber":929,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":930,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":931,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e this.isCopyingQuestion \u003d false),"},{"lineNumber":932,"author":{"gitId":"-"},"content":"        ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":933,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":934,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":935,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":937,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":938,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":939,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":940,"author":{"gitId":"-"},"content":""},{"lineNumber":941,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":942,"author":{"gitId":"-"},"content":"   * Gets all students of a course."},{"lineNumber":943,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":944,"author":{"gitId":"-"},"content":"  getAllStudentsOfCourse(): void {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId })"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":947,"author":{"gitId":"-"},"content":"          this.studentsOfCourse \u003d students.students;"},{"lineNumber":948,"author":{"gitId":"-"},"content":""},{"lineNumber":949,"author":{"gitId":"-"},"content":"          // sort the student list based on team name and student name"},{"lineNumber":950,"author":{"gitId":"-"},"content":"          this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"},{"lineNumber":951,"author":{"gitId":"-"},"content":"            const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"},{"lineNumber":952,"author":{"gitId":"-"},"content":"            if (teamNameCompare \u003d\u003d\u003d 0) {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"              return a.name.localeCompare(b.name);"},{"lineNumber":954,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":955,"author":{"gitId":"-"},"content":"            return teamNameCompare;"},{"lineNumber":956,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":957,"author":{"gitId":"-"},"content":""},{"lineNumber":958,"author":{"gitId":"-"},"content":"          // select the first student"},{"lineNumber":959,"author":{"gitId":"-"},"content":"          if (this.studentsOfCourse.length \u003e\u003d 1) {"},{"lineNumber":960,"author":{"gitId":"-"},"content":"            this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"},{"lineNumber":961,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":962,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":963,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":964,"author":{"gitId":"-"},"content":""},{"lineNumber":965,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":966,"author":{"gitId":"-"},"content":"   * Gets all instructors of a course which can be previewed as."},{"lineNumber":967,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":968,"author":{"gitId":"-"},"content":"  getAllInstructorsCanBePreviewedAs(): void {"},{"lineNumber":969,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructors({"},{"lineNumber":970,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":971,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":972,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":973,"author":{"gitId":"-"},"content":"        .subscribe((instructors: Instructors) \u003d\u003e {"},{"lineNumber":974,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs \u003d instructors.instructors;"},{"lineNumber":975,"author":{"gitId":"-"},"content":""},{"lineNumber":976,"author":{"gitId":"-"},"content":"          // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"},{"lineNumber":977,"author":{"gitId":"-"},"content":"          // in the feedback session"},{"lineNumber":978,"author":{"gitId":"-"},"content":""},{"lineNumber":979,"author":{"gitId":"-"},"content":"          // sort the instructor list based on name"},{"lineNumber":980,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs.sort((a: Instructor, b: Instructor): number \u003d\u003e {"},{"lineNumber":981,"author":{"gitId":"-"},"content":"            return a.name.localeCompare(b.name);"},{"lineNumber":982,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":983,"author":{"gitId":"-"},"content":""},{"lineNumber":984,"author":{"gitId":"-"},"content":"          // select the first instructor"},{"lineNumber":985,"author":{"gitId":"-"},"content":"          if (this.instructorsCanBePreviewedAs.length \u003e\u003d 1) {"},{"lineNumber":986,"author":{"gitId":"-"},"content":"            this.emailOfInstructorToPreview \u003d this.instructorsCanBePreviewedAs[0].email;"},{"lineNumber":987,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":988,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":989,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"  expandAll(): void {"},{"lineNumber":992,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":993,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":994,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":995,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":996,"author":{"gitId":"-"},"content":""},{"lineNumber":997,"author":{"gitId":"-"},"content":"  collapseAll(): void {"},{"lineNumber":998,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1002,"author":{"gitId":"-"},"content":""},{"lineNumber":1003,"author":{"gitId":"-"},"content":"  private deepCopy\u003cT\u003e(obj: T): T {"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    return JSON.parse(JSON.stringify(obj));"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1006,"author":{"gitId":"-"},"content":""},{"lineNumber":1007,"author":{"gitId":"-"},"content":"  private scrollToNewEditForm(): void {"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"      const allEditForms: NodeListOf\u003cElement\u003e \u003d document.querySelectorAll(\u0027tm-question-edit-form\u0027);"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"      const newEditForm: Element \u003d allEditForms[allEditForms.length - 1];"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"      const yOffset: number \u003d -70; // Need offset because of the navBar"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"      const y: number \u003d newEditForm.getBoundingClientRect().top + window.pageYOffset + yOffset;"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"      window.scrollTo({ top: y, behavior: \u0027smooth\u0027 });"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"    }, 0);"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":2,"-":1014}},{"path":"src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!isCoursesLoading \u0026\u0026 courseCandidates.length \u003d\u003d\u003d 0 \u0026\u0026 !hasCourseLoadingFailed\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  You have not created any courses yet, or you have no active courses. Go \u003ca tmRouterLink\u003d\"/web/instructor/courses\"\u003ehere\u003c/a\u003e to create or unarchive a course."},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-add-session\" class\u003d\"btn btn-success\" (click)\u003d\"isSessionEditFormExpanded \u003d true\""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"          [disabled]\u003d\"isSessionEditFormExpanded || isCoursesLoading\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Feedback Session"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"\u003cdiv class\u003d\"margin-top-30px\" *ngIf\u003d\"isSessionEditFormExpanded \u0026\u0026 !isCoursesLoading\" @collapseAnim\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\" [(model)]\u003d\"sessionEditFormModel\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                        [courseCandidates]\u003d\"courseCandidates\" [templateSessions]\u003d\"templateSessions\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                        (addNewSessionEvent)\u003d\"addNewSessionHandler()\" (copyOtherSessionsEvent)\u003d\"copyFromOtherSessionsHandler()\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                        (closeEditFormEvent)\u003d\"isSessionEditFormExpanded \u003d false\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003e\u003c/tm-session-edit-form\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCourseLoadingFailed || hasFeedbackSessionLoadingFailed\" [message]\u003d\"\u0027Failed to load data\u0027\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                  (retryEvent)\u003d\"retryLoadingAllData()\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cdiv *tmIsLoading\u003d\"isCoursesLoading\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"sessionsTableRowModels.length \u003d\u003d\u003d 0 \u0026\u0026 !isFeedbackSessionsLoading\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        You have not created any sessions yet. Use the form above to create a session."},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-table *tmIsLoading\u003d\"isFeedbackSessionsLoading\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                         [sessionsTableRowModels]\u003d\"sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"sessionsTableRowModelsSortBy\" [sessionsTableRowModelsSortOrder]\u003d\"sessionsTableRowModelsSortOrder\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                         [courseCandidates]\u003d\"courseCandidates\" [columnsToShow]\u003d\"[ SessionsTableColumn.COURSE_ID ]\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                         [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.BLUE\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                         (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent($event)\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                         (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler($event)\" (editSessionEvent)\u003d\"editSessionEventHandler($event)\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                         (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler($event)\" (copySessionEvent)\u003d\"copySessionEventHandler($event)\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                         (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler($event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler($event)\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                         (publishSessionEvent)\u003d\"publishSessionEventHandler($event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler($event)\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                         (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler($event)\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                         (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(sessionsTableRowModels[$event])\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                         (sendRemindersToStudentsEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 text-muted\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Note: The table above doesn\u0027t contain sessions from archived courses and soft-deleted courses."},{"lineNumber":46,"author":{"gitId":"-"},"content":"        To view sessions from an archived course, unarchive the course first; to view sessions from a course in recycle bin, restore the course first."},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003ctm-sessions-recycle-bin-table"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        *tmIsLoading\u003d\"isRecycleBinLoading || isRestoreFeedbackSessionLoading || isPermanentDeleteLoading\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        [isRecycleBinExpanded]\u003d\"isRecycleBinExpanded\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModels]\u003d\"recycleBinFeedbackSessionRowModels\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortBy]\u003d\"recycleBinFeedbackSessionRowModelsSortBy\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortOrder]\u003d\"recycleBinFeedbackSessionRowModelsSortOrder\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        (restoreSessionEvent)\u003d\"restoreRecycleBinFeedbackSession($event)\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        (restoreAllRecycleBinFeedbackSessionEvent)\u003d\"restoreAllRecycleBinFeedbackSession()\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        (permanentlyDeleteSessionEvent)\u003d\"permanentDeleteSession($event)\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        (permanentDeleteAllSessionsEvent)\u003d\"permanentDeleteAllSessions()\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        (sortRecycleBinFeedbackSessionRowsEvent)\u003d\"sortRecycleBinFeedbackSessionRowsEvent($event)\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        (recycleBinExpandEvent)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded;\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"jianhandev":2,"-":64}},{"path":"src/web/styles.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/* You can add global styles to this file, and also import other style files */"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"body {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  font-size: .875rem;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"ul {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"h1,"},{"lineNumber":13,"author":{"gitId":"-"},"content":".h1 {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  font-size: 2.1875rem;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"h2,"},{"lineNumber":18,"author":{"gitId":"-"},"content":".h2 {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  font-size: 1.75rem;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"h3,"},{"lineNumber":23,"author":{"gitId":"-"},"content":".h3 {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  font-size: 1.53125rem;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"h4,"},{"lineNumber":28,"author":{"gitId":"-"},"content":".h4 {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  font-size: 1.3125rem;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"h5,"},{"lineNumber":33,"author":{"gitId":"-"},"content":".h5 {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  font-size: 1.09375rem;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"h6,"},{"lineNumber":38,"author":{"gitId":"-"},"content":".h6 {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  font-size: .875rem;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":".btn,"},{"lineNumber":43,"author":{"gitId":"-"},"content":".form-control,"},{"lineNumber":44,"author":{"gitId":"-"},"content":".dropdown-item {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  font-size: .875rem;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":".color-orange {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  color: #E46D0B;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":".color-blue {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  color: #4379D1;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":".hidden {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  display: none;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":".modal {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":".modal::before {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  content: \u0027\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  height: 100%;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":".modal-header {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  padding: .75rem 1rem;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":".modal-body {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  padding: 1rem 1.25rem;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":".modal-footer {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  padding: .3rem .5rem;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":".modal-dialog {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  text-align: left;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  max-height: 90vh;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  max-width: 70vw;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  min-width: 30vw;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  scrollbar-width: none; // Firefox"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  -ms-overflow-style: none;  // IE10+"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u0026::-webkit-scrollbar { // Webkit-based browsers"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    width: 0;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    height: 0;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"@media (max-width: 768px) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  .modal-dialog {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    max-width: 80vw;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    min-width: 65vw;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"halfwhole"},"content":".modal-large .modal-dialog {"},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":"  width: 1000px;"},{"lineNumber":108,"author":{"gitId":"halfwhole"},"content":"}"},{"lineNumber":109,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":".close:focus {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  outline: 0;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":".table {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  \u0026 th,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  td {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    padding: .5rem;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":".card {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":".card-header {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  padding: .5rem 1rem;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":".card-header-btn-toolbar {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  margin-left: auto;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  text-align: right;"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  button {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    margin-right: var(--btn-margin);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  .btn-primary {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    background-color: darken(#007BFF, 5%); // 5% darker than primary"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  .btn-secondary {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    background-color: darken(#6C757D, 10%); // 10% darker than secondary"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":".dropdown-item {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  \u0026:focus,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    background-color: #DAE0E5;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":".form-control::placeholder {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  opacity: .7;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"// The following few properties are for the usermap page."},{"lineNumber":163,"author":{"gitId":"-"},"content":"// They need to be global style because the map is not rendered as Angular components,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"// thus it cannot read the component-specific CSS rules."},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":".usermap-country {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  stroke: #CECECE;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  stroke-width: .15px;"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    stroke-width: .7px;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":".usermap-text {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  font-size: 10px;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  text-transform: capitalize;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":".usermap-tooltip {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  color: #222;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  background: #FFF;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  padding: .5em;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  text-shadow: #F5F5F5 0 1px 0;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  border-radius: 2px;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  box-shadow: 0 0 2px 0 #A6A6A6;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  opacity: .9;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":".text-preserve-space {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  white-space: pre-wrap;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":".cursor-pointer {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":".ngb-tooltip-class {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  text-decoration: underline dotted #808080;"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    text-decoration: underline dotted #000;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"@media print {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  .no-print {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    display: none;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"// cursor not-allowed for input disabled attribute and tinyMCE\u0027s disabled"},{"lineNumber":214,"author":{"gitId":"-"},"content":"[disabled],"},{"lineNumber":215,"author":{"gitId":"-"},"content":".editor.editor-disabled {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  cursor: not-allowed;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":".btn-light {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  border: 1px solid #DDD;"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"  \u0026[disabled] {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    border: 1px solid #EEE;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":":root {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  --btn-margin: 5px;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":".btn-margin-left {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  margin-left: var(--btn-margin);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":".btn-margin-right {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  margin-right: var(--btn-margin);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":".btn-margin {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  margin: var(--btn-margin);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":".fa-sort-down,"},{"lineNumber":244,"author":{"gitId":"-"},"content":".fa-sort-up {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":".fa-sort {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  color: #CCC;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":".fa-sort,"},{"lineNumber":253,"author":{"gitId":"-"},"content":".fa-sort-up,"},{"lineNumber":254,"author":{"gitId":"-"},"content":".fa-sort-down {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  // copied from fa-stack-X"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  left: 0;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  line-height: inherit;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":".fa-stack {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  width: auto;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":4,"-":260}},{"path":"src/web/types/question-details-impl/feedback-text-question-details.impl.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, QuestionOutput,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"} from \u0027../api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AbstractFeedbackQuestionDetails } from \u0027./abstract-feedback-question-details\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Concrete implementation of {@link FeedbackTextQuestionDetails}."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class FeedbackTextQuestionDetailsImpl extends AbstractFeedbackQuestionDetails"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    implements FeedbackTextQuestionDetails {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  recommendedLength?: number;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  questionText: string \u003d \u0027\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType \u003d FeedbackQuestionType.TEXT;"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"  shouldAllowRichText: boolean;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  constructor(apiOutput: FeedbackTextQuestionDetails) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    this.recommendedLength \u003d apiOutput.recommendedLength;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    this.questionText \u003d apiOutput.questionText;"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"    this.shouldAllowRichText \u003d apiOutput.shouldAllowRichText;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  getQuestionCsvStats(_: QuestionOutput): string[][] {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // no stats for text question"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    return [];"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  isParticipantCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    return false;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  isInstructorCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":2,"-":35}}]
